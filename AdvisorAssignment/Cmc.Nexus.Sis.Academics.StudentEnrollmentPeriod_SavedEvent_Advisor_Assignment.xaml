<Activity mc:Ignorable="sap sap2010 sads" x:Class="Advisor_Assignment"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:cce="clr-namespace:Cmc.Core.Eventing;assembly=Cmc.Core"
 xmlns:ccwa="clr-namespace:Cmc.Core.Workflow.Activities;assembly=Cmc.Core.Workflow"
 xmlns:ccwae="clr-namespace:Cmc.Core.Workflow.Activities.EntityModel;assembly=Cmc.Core.Workflow"
 xmlns:cnce="clr-namespace:Cmc.Nexus.Common.Entities;assembly=Cmc.Nexus.Common.Contracts"
 xmlns:cncw="clr-namespace:Cmc.Nexus.Common.Workflow;assembly=Cmc.Nexus.Common.Workflow"
 xmlns:cnsa="clr-namespace:Cmc.Nexus.Sis.Academics;assembly=Cmc.Nexus.Contracts"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="entity" Type="InOutArgument(cnsa:StudentEnrollmentPeriod)" />
    <x:Property Name="args" Type="InOutArgument(s:EventArgs)" />
    <x:Property Name="event" Type="InOutArgument(cce:SavedEvent)" />
    <x:Property Name="schoolstatus" Type="InOutArgument(cnce:StudentEntity)" />
    <x:Property Name="workflowId" Type="InOutArgument(s:Guid)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Advisor_Assignment_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Cmc.Core.Eventing</x:String>
      <x:String>Cmc.Nexus.Sis.Academics</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Cmc.Core.EntityModel</x:String>
      <x:String>Cmc.Core.ComponentModel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Xml</x:String>
      <x:String>Cmc.Nexus.Common.Entities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Cmc.Core</AssemblyReference>
      <AssemblyReference>Cmc.Nexus.Contracts</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Cmc.Nexus.Common.Contracts</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Default="Not the correct school status" Name="Reason" />
      <Variable x:TypeArguments="x:String" Default="False" Name="TriggerStatusValid" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="AmRepID" />
      <Variable x:TypeArguments="x:Int32" Name="FaAdvisor" />
      <Variable x:TypeArguments="x:Int32" Name="ADAdvisor" />
      <Variable x:TypeArguments="x:Int32" Name="AdProgramGroupID" />
      <Variable x:TypeArguments="sd:DataSet" Name="StaffData" />
      <Variable x:TypeArguments="x:Int32" Name="SystaffID" />
      <Variable x:TypeArguments="x:Int32" Default="99999" Name="StaffCount" />
      <Variable x:TypeArguments="x:Int32" Name="MaxEnrollments" />
      <Variable x:TypeArguments="x:Int32" Default="99999" Name="ProgramAdvisorCount" />
      <Variable x:TypeArguments="x:String" Name="FADupeCheck" />
      <Variable x:TypeArguments="x:String" Name="ADDupeCheck" />
      <Variable x:TypeArguments="x:String" Name="TransferStudent" />
      <Variable x:TypeArguments="x:Int32" Name="MCAdvisor" />
      <Variable x:TypeArguments="x:String" Name="IsMilitary" />
      <Variable x:TypeArguments="x:Int32" Name="MilitaryAdvisor" />
      <Variable x:TypeArguments="x:Int32" Name="GradAdvisor" />
      <Variable x:TypeArguments="x:String" Name="IsGrad" />
      <Variable x:TypeArguments="x:Int32" Name="AdDegreeID" />
      <Variable x:TypeArguments="x:Int32" Name="LeadID" />
      <Variable x:TypeArguments="x:Int32" Name="crmUpdateStatus" />
      <Variable x:TypeArguments="x:String" Name="logPrefix" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID26" sap2010:WorkflowViewState.IdRef="FlowStep_27">
        <Sequence DisplayName="Init" sap2010:WorkflowViewState.IdRef="Sequence_45">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="variable1" />
          </Sequence.Variables>
          <ccwa:GetWorkflowInstanceId sap2010:WorkflowViewState.IdRef="GetWorkflowInstanceId_1" Result="[workflowId]" />
          <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[logPrefix]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Format("Advisor_Assignment StudentID:{0} WorkflowID;{1}",entity.StudentId.ToString,workflowId.ToString+Environment.NewLine)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_4">
            <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_1" Text="[logPrefix+&quot;*****BEGIN Workflow*****&quot;]" />
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                <Sequence DisplayName="Validate SchoolStatus" sap2010:WorkflowViewState.IdRef="Sequence_1">
                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_2" Text="[logPrefix+&quot;---Begin Validate School Status---&quot; + Environment.NewLine]" />
                  <ccwa:ExecuteDataReader CommandText="[&quot;exec SPROC_AdvisorAssignment_GetConfiguration &quot; &amp; Entity.Id]" DisplayName="ExecuteDataReader - Get school status" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_1">
                    <ccwa:ExecuteDataReader.Body>
                      <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                        </ActivityAction.Argument>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <Assign DisplayName="Assign TriggerStatusValid" sap2010:WorkflowViewState.IdRef="Assign_1">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[TriggerStatusValid]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Directcast(CurrentRow("TriggerStatusValid"),string)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_5" Text="[logPrefix+&quot;TriggerStatusValid = &quot; &amp; TriggerStatusValid &amp; Environment.NewLine]" />
                        </Sequence>
                      </ActivityAction>
                    </ccwa:ExecuteDataReader.Body>
                  </ccwa:ExecuteDataReader>
                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_3" Text="[logPrefix+&quot;---End Validate School Status---&quot; + Environment.NewLine]" />
                </Sequence>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID24" sap2010:WorkflowViewState.IdRef="FlowStep_24">
                    <ccwae:GetEntity x:TypeArguments="cnce:StudentEntity" EntityId="[entity.StudentId]" sap2010:WorkflowViewState.IdRef="GetEntity`1_1" Result="[schoolstatus]" />
                    <FlowStep.Next>
                      <FlowDecision x:Name="__ReferenceID4" Condition="[Entity.HasChanged(StudentEnrollmentPeriod.StudentStatusIdProperty) AND TriggerStatusValid = &quot;True&quot; ANDALSO  (entity.originalvalues(&quot;StudentStatusId&quot;).Equals(57) OR entity.originalvalues(&quot;StudentStatusId&quot;).Equals(11))]" DisplayName="Status?" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID25" sap2010:WorkflowViewState.IdRef="FlowStep_25">
                            <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_58" Text="[logPrefix+&quot;****** original SchoolStatus=&quot;+ schoolstatus.SchoolStatusId.ToString +Environment.NewLine +&quot;New SchoolStatus=&quot;+entity.StudentStatusId.ToString+Environment.NewLine + &quot;TriggerStatusValid=&quot;+TriggerStatusValid]" />
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                                <Sequence DisplayName="Get FA/AD Advisors" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_22" Text="[logPrefix+ &quot;---Begin Get FA/AD Advisors---&quot; + Environment.NewLine]" />
                                  <ccwa:ExecuteDataReader CommandText="[&quot;SELECT S.AmRepID FROM Adenroll E (NOLOCK) JOIN syStudent S (NOLOCK) ON E.SyStudentID = S.SyStudentId WHERE AdEnrollID = &quot; &amp; Entity.Id]" DisplayName="ExecuteDataReader - Get Student Master Admissions Rep" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_9">
                                    <ccwa:ExecuteDataReader.Body>
                                      <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                        </ActivityAction.Argument>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
                                          <Assign DisplayName="Assign AmRepID" sap2010:WorkflowViewState.IdRef="Assign_20">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[AmRepID]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("AmRepID"),int32)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_23" Text="[logPrefix+ &quot;AmRepID = &quot; &amp; AmRepID &amp; Environment.NewLine]" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ccwa:ExecuteDataReader.Body>
                                  </ccwa:ExecuteDataReader>
                                  <ccwa:ExecuteDataReader CommandText="[&quot;SELECT AdmCounselor.tExternalSisID as AdmCounselor, ISNULL(Convert(Int,FaAdvisor.tExternalSisID),0) as FaAdvisor, ISNULL(Convert(Int,ADAdvisor.tExternalSisID),0) as ADAdvisor FROM [tblObjectType5013_1] A (NOLOCK) JOIN [tblObjectType20036] AdmCounselor (NOLOCK) ON A.FldNumeric22255 = AdmCounselor.aID LEFT JOIN [tblObjectType20036] FaAdvisor (NOLOCK) ON A.FldNumeric22251 = FaAdvisor.aID LEFT JOIN [tblObjectType20036] ADAdvisor (NOLOCK) ON A.FldNumeric22253 = ADAdvisor.aID WHERE AdmCounselor.tExternalSisID = &quot; &amp; AmRepID]" ConnectionStringName="CRMConnection" DisplayName="ExecuteDataReader - Get Advisor SystaffIDs from CRM" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_10">
                                    <ccwa:ExecuteDataReader.Body>
                                      <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                        </ActivityAction.Argument>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
                                          <Assign DisplayName="Assign FaAdvisor" sap2010:WorkflowViewState.IdRef="Assign_21">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[FaAdvisor]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("FaAdvisor"),int32)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign ADAdvisor" sap2010:WorkflowViewState.IdRef="Assign_22">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[ADAdvisor]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("ADAdvisor"),int32)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_24" Text="[logPrefix+ &quot;FaAdvisor = &quot; &amp; FaAdvisor &amp; Environment.NewLine + &quot;ADAdvisor = &quot; &amp; ADAdvisor &amp; Environment.NewLine]" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ccwa:ExecuteDataReader.Body>
                                  </ccwa:ExecuteDataReader>
                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_25" Text="[logPrefix+ &quot;---End Get FA/AD Advisors---&quot; + Environment.NewLine]" />
                                </Sequence>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_15">
                                    <Sequence DisplayName="Check Grad" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_31" Text="[logPrefix+ &quot;---Begin Check Grad---&quot; + Environment.NewLine]" />
                                      <ccwa:ExecuteDataReader CommandText="[&quot;SELECT CASE WHEN EXISTS (SELECT PV.AdDegreeID FROM AdEnroll E (NOLOCK) JOIN Adprogramversion PV (NOLOCK) ON E.adProgramVersionID = PV.AdProgramVersionID JOIN Addegree D (NOLOCK) ON PV.AdDegreeID = D.AdDegreeID where D.GraduateLevel = 1 AND AdenrollID = &quot; &amp; Entity.Id &amp; &quot;) THEN 'True' Else 'False' END as IsGrad&quot;]" DisplayName="ExecuteDataReader" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_14">
                                        <ccwa:ExecuteDataReader.Body>
                                          <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                            </ActivityAction.Argument>
                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25">
                                              <Assign DisplayName="Assign IsGrad" sap2010:WorkflowViewState.IdRef="Assign_28">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[IsGrad]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[DirectCast(CurrentRow("IsGrad"),string)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_32" Text="[logPrefix+ &quot;IsGrad = &quot; &amp; IsGrad &amp; Environment.NewLine]" />
                                            </Sequence>
                                          </ActivityAction>
                                        </ccwa:ExecuteDataReader.Body>
                                      </ccwa:ExecuteDataReader>
                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_33" Text="[logPrefix+ &quot;---End Check Grad---&quot; + Environment.NewLine]" />
                                    </Sequence>
                                    <FlowStep.Next>
                                      <FlowDecision x:Name="__ReferenceID15" Condition="[IsGrad = &quot;False&quot;]" DisplayName="Not Grad?" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                        <FlowDecision.True>
                                          <FlowStep x:Name="__ReferenceID20" sap2010:WorkflowViewState.IdRef="FlowStep_18">
                                            <Sequence DisplayName="Check Military" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_41" Text="[logPrefix+ &quot;---Begin Check Military---&quot; + Environment.NewLine]" />
                                              <ccwa:ExecuteDataReader CommandText="[&quot;SELECT CASE WHEN Exists (SELECT SystudentID FROM AmProspectExtraCurr (NOLOCK) WHERE AmExtraCurrID = 9 AND SystudentID = &quot; &amp; Entity.StudentId &amp; &quot;) THEN 'True' ELSE 'False' END as IsMilitary&quot;]" DisplayName="ExecuteDataReader - Get Student Master Admissions Rep" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_18">
                                                <ccwa:ExecuteDataReader.Body>
                                                  <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                    </ActivityAction.Argument>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                      <Assign DisplayName="Assign IsMilitary" sap2010:WorkflowViewState.IdRef="Assign_35">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[IsMilitary]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[DirectCast(CurrentRow("IsMilitary"),string)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_42" Text="[logPrefix+ &quot;IsMilitary = &quot; &amp; IsMilitary &amp; Environment.NewLine]" />
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ccwa:ExecuteDataReader.Body>
                                              </ccwa:ExecuteDataReader>
                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_43" Text="[logPrefix+&quot;---End Check Military---&quot; + Environment.NewLine]" />
                                            </Sequence>
                                            <FlowStep.Next>
                                              <FlowDecision x:Name="__ReferenceID18" Condition="[IsMilitary = &quot;False&quot;]" DisplayName="Not Military?" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                                                <FlowDecision.True>
                                                  <FlowDecision x:Name="__ReferenceID7" Condition="[Entity.CampusId = 7]" DisplayName="ADP Campus?" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                                                    <FlowDecision.True>
                                                      <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                                                        <ccwa:ExecuteDataReader CommandText="[&quot;SELECT CASE WHEN EXISTS (SELECT SyStudentID FROM Adenroll E (NOLOCK) WHERE Applicant = 0 AND SySchoolStatusID NOT IN (10,11) AND SystudentID = &quot; &amp; entity.StudentId &amp; &quot; AND AdenrollID &lt;&gt; &quot; &amp; entity.Id &amp; &quot; UNION SELECT FieldValue FROM syUserValues (NOLOCK) WHERE syUserDictID = 5 AND SystudentID = &quot; &amp; Entity.StudentId &amp; &quot; AND FieldValue = 'Transfer') THEN 'True' Else 'False' END as TransferStudent&quot;]" DisplayName="Check Transfer" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_11">
                                                          <ccwa:ExecuteDataReader.Body>
                                                            <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                              </ActivityAction.Argument>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                                                                <Assign DisplayName="Assign TransferStudent" sap2010:WorkflowViewState.IdRef="Assign_23">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[TransferStudent]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">[DirectCast(CurrentRow("TransferStudent"),string)]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_26" Text="[logPrefix+&quot;TransferStudent = &quot; &amp; TransferStudent &amp; Environment.NewLine]" />
                                                              </Sequence>
                                                            </ActivityAction>
                                                          </ccwa:ExecuteDataReader.Body>
                                                        </ccwa:ExecuteDataReader>
                                                        <FlowStep.Next>
                                                          <FlowDecision x:Name="__ReferenceID10" Condition="[TransferStudent = &quot;True&quot;]" DisplayName="Transfer?" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                                                            <FlowDecision.True>
                                                              <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_7">
                                                                <Sequence DisplayName="Get Program Advisors" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_12" Text="[logPrefix+ &quot;---Begin Get Program Advisors---&quot; + Environment.NewLine]" />
                                                                  <ccwa:ExecuteDataReader CommandText="[&quot;SELECT Top 1 PG.AdProgramGroupID FROM AdEnroll E (NOLOCK) JOIN AdProgramVersion PV (NOLOCK) ON E.adProgramVersionID = PV.AdProgramVersionID JOIN AdProgramVersionProgramGroup PVPG (NOLOCK) ON PVPG.AdProgramVersionID = PV.AdProgramVersionID JOIN AdProgramGroup PG (NOLOCK) ON PVPG.AdProgramGroupID = PG.AdProgramGroupID WHERE PG.Descrip LIKE 'School of%' AND E.AdEnrollID = &quot; &amp; Entity.Id]" DisplayName="ExecuteDataReader - ProgramGroupID" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_4">
                                                                    <ccwa:ExecuteDataReader.Body>
                                                                      <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                                        <ActivityAction.Argument>
                                                                          <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                                        </ActivityAction.Argument>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                                                                          <Assign DisplayName="Assign AdProgramGroupID" sap2010:WorkflowViewState.IdRef="Assign_5">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Int32">[AdProgramGroupID]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Int32">[Directcast(CurrentRow("AdProgramGroupID"),int32)]</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_13" Text="[logPrefix+ &quot;AdProgramGroupID = &quot; &amp; AdProgramGroupID &amp; Environment.NewLine]" />
                                                                        </Sequence>
                                                                      </ActivityAction>
                                                                    </ccwa:ExecuteDataReader.Body>
                                                                  </ccwa:ExecuteDataReader>
                                                                  <ccwa:ExecuteQuery CommandText="[&quot;SELECT Convert(Int,SIS.[tExternalSisID]) as SyStaffID, ISNULL(Convert(Int,[FldNumeric22262]),999) as MaxEnrollments FROM [tbl22261_22260] R (NOLOCK) JOIN [tblObjectType20018] PG (NOLOCK) ON PG.aID = R.nManySide2 JOIN [tblObjectType20036] SIS (NOLOCK) ON SIS.aID = R.nManySide1 WHERE PG.[tExternalSisID] = &quot; &amp; AdProgramGroupID &amp; &quot; Order by SIS.tName ASC&quot;]" ConnectionStringName="CRMConnection" Data="[StaffData]" DisplayName="ExecuteQuery - Get CS reps tied to group" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" />
                                                                  <ForEach x:TypeArguments="sd:DataRow" DisplayName="ForEach&lt;DataRow&gt; - " sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[StaffData.Tables(0).AsEnumerable()]">
                                                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Staff" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                                                                        <Assign DisplayName="Assign SyStaffID" sap2010:WorkflowViewState.IdRef="Assign_7">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:Int32">[SyStaffID]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:Int32">[Directcast(Staff("SystaffID"),int32)]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <Assign DisplayName="Assign MaxEnrollments" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:Int32">[MaxEnrollments]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:Int32">[Directcast(Staff("MaxEnrollments"),int32)]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <ccwa:ExecuteDataReader CommandText="[&quot;SPROC_AdvisorAssignment_GetProgramAdvisorCount &quot; &amp; SyStaffID &amp; &quot;, &quot; &amp; MaxEnrollments]" DisplayName="ExecuteDataReader - Get Program Advisor" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_5">
                                                                          <ccwa:ExecuteDataReader.Body>
                                                                            <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                                              <ActivityAction.Argument>
                                                                                <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                                              </ActivityAction.Argument>
                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                                                                                <Assign DisplayName="Assign StaffCount" sap2010:WorkflowViewState.IdRef="Assign_6">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:Int32">[StaffCount]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("StaffCount"),int32)]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_17" Text="[logPrefix+&quot;SyStaffID = &quot; &amp; SyStaffID &amp; Environment.NewLine + &quot;MaxEnrollments = &quot; &amp; MaxEnrollments &amp;Environment.NewLine + &quot;StaffCount = &quot; &amp; StaffCount &amp; Environment.NewLine]" />
                                                                                <If Condition="[StaffCount &lt;MaxEnrollments]" sap2010:WorkflowViewState.IdRef="If_5">
                                                                                  <If.Then>
                                                                                    <If Condition="[StaffCount &lt;ProgramAdvisorCount]" sap2010:WorkflowViewState.IdRef="If_4">
                                                                                      <If.Then>
                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                                                                                          <Assign DisplayName="Assign AdAdvisor" sap2010:WorkflowViewState.IdRef="Assign_9">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">[AdAdvisor]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">[SystaffID]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign DisplayName="Assign CSAdvisorCount" sap2010:WorkflowViewState.IdRef="Assign_10">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">[ProgramAdvisorCount]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">[StaffCount]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </Sequence>
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
                                                                                          <Assign DisplayName="Assign AdAdvisor" sap2010:WorkflowViewState.IdRef="Assign_13">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">[AdAdvisor]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">[AdAdvisor]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign DisplayName="Assign ProgramAdvisorCount" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">[ProgramAdvisorCount]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">[ProgramAdvisorCount]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </Sequence>
                                                                                      </If.Else>
                                                                                    </If>
                                                                                  </If.Then>
                                                                                  <If.Else>
                                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                                                                                      <Assign DisplayName="Assign AdAdvisor" sap2010:WorkflowViewState.IdRef="Assign_15">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:Int32">[AdAdvisor]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:Int32">[AdAdvisor]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <Assign DisplayName="Assign ProgramAdvisorCount" sap2010:WorkflowViewState.IdRef="Assign_16">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:Int32">[ProgramAdvisorCount]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:Int32">[ProgramAdvisorCount]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </Sequence>
                                                                                  </If.Else>
                                                                                </If>
                                                                                <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_16" Text="[Environment.NewLine + logPrefix+&quot;AdAdvisor = &quot; &amp; AdAdvisor &amp; Environment.NewLine + &quot;ProgramAdvisorCount = &quot; &amp; ProgramAdvisorCount &amp;Environment.NewLine]" />
                                                                              </Sequence>
                                                                            </ActivityAction>
                                                                          </ccwa:ExecuteDataReader.Body>
                                                                        </ccwa:ExecuteDataReader>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ForEach>
                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_15" Text="[Environment.NewLine +logPrefix+ &quot;---End Get Program Advisors---&quot; + Environment.NewLine]" />
                                                                </Sequence>
                                                                <FlowStep.Next>
                                                                  <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_6">
                                                                    <Sequence DisplayName="Update Advisors" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_10" Text="[logPrefix+ &quot;---Begin Update Advisors---&quot; + Environment.NewLine]" />
                                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_18" Text="[logPrefix+ &quot;FaAdvisor =&quot; &amp; FaAdvisor &amp; Environment.NewLine + &quot;AdAdvisor = &quot; &amp; AdAdvisor &amp; Environment.NewLine + Environment.NewLine]" />
                                                                      <If Condition="[FaAdvisor &gt; 0]" sap2010:WorkflowViewState.IdRef="If_1">
                                                                        <If.Then>
                                                                          <ccwa:ExecuteDataReader CommandText="[&quot;SELECT CASE WHEN EXISTS (SELECT SyAdvisorByEnrollID FROM SyAdvisorByEnroll (NOLOCK) WHERE SyStaffGroupID = 3 AND AdEnrollID = &quot; &amp; Entity.Id &amp; &quot;) THEN 'True' ELSE 'False' END AS FADupeCheck&quot;]" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_6">
                                                                            <ccwa:ExecuteDataReader.Body>
                                                                              <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                                                <ActivityAction.Argument>
                                                                                  <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                                                </ActivityAction.Argument>
                                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
                                                                                  <Assign DisplayName="Assign FADupeCheck" sap2010:WorkflowViewState.IdRef="Assign_17">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[FADupeCheck]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[DirectCast(CurrentRow("FADupeCheck"),string)]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_19" Text="[logPrefix+ &quot;FADupeCheck = &quot; &amp; FADupeCheck &amp; Environment.NewLine]" />
                                                                                  <If Condition="[FADupeCheck = &quot;False&quot;]" sap2010:WorkflowViewState.IdRef="If_6">
                                                                                    <If.Then>
                                                                                      <cncw:AssignStudentAdvisor ValidationMessages="{x:Null}" DisplayName="AssignStudentAdvisor - FA" sap2010:WorkflowViewState.IdRef="AssignStudentAdvisor_1" StaffGroupId="3" StaffId="[FaAdvisor]" StudentEnrollmentPeriodId="[Entity.Id]" />
                                                                                    </If.Then>
                                                                                  </If>
                                                                                </Sequence>
                                                                              </ActivityAction>
                                                                            </ccwa:ExecuteDataReader.Body>
                                                                          </ccwa:ExecuteDataReader>
                                                                        </If.Then>
                                                                      </If>
                                                                      <If Condition="[AdAdvisor &gt; 0]" sap2010:WorkflowViewState.IdRef="If_8">
                                                                        <If.Then>
                                                                          <ccwa:ExecuteDataReader CommandText="[&quot;SELECT CASE WHEN EXISTS (SELECT SyAdvisorByEnrollID FROM SyAdvisorByEnroll (NOLOCK) WHERE SyStaffGroupID = 9 AND AdEnrollID = &quot; &amp; Entity.Id &amp; &quot;) THEN 'True' ELSE 'False' END AS ADDupeCheck&quot;]" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_7">
                                                                            <ccwa:ExecuteDataReader.Body>
                                                                              <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                                                <ActivityAction.Argument>
                                                                                  <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                                                </ActivityAction.Argument>
                                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                                                                                  <Assign DisplayName="Assign ADDupeCheck" sap2010:WorkflowViewState.IdRef="Assign_18">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[ADDupeCheck]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[DirectCast(CurrentRow("ADDupeCheck"),string)]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_20" Text="[logPrefix+ &quot;ADDupeCheck = &quot; &amp; ADDupeCheck &amp; Environment.NewLine]" />
                                                                                  <If Condition="[ADDupeCheck = &quot;False&quot;]" sap2010:WorkflowViewState.IdRef="If_7">
                                                                                    <If.Then>
                                                                                      <cncw:AssignStudentAdvisor ValidationMessages="{x:Null}" DisplayName="AssignStudentAdvisor - AD" sap2010:WorkflowViewState.IdRef="AssignStudentAdvisor_4" StaffGroupId="9" StaffId="[AdAdvisor]" StudentEnrollmentPeriodId="[Entity.Id]" />
                                                                                    </If.Then>
                                                                                  </If>
                                                                                </Sequence>
                                                                              </ActivityAction>
                                                                            </ccwa:ExecuteDataReader.Body>
                                                                          </ccwa:ExecuteDataReader>
                                                                        </If.Then>
                                                                      </If>
                                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_11" Text="[logPrefix+ &quot;---End Update Advisors---&quot; + Environment.NewLine]" />
                                                                    </Sequence>
                                                                    <FlowStep.Next>
                                                                      <FlowStep x:Name="__ReferenceID22" sap2010:WorkflowViewState.IdRef="FlowStep_21">
                                                                        <Sequence DisplayName="Get CRM Lead Entity" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_48" Text="[logPrefix+&quot;Advisor Assignment Workflow CRM Update****Begin Get CRM Lead Id---&quot; &amp; LeadID.ToString + Environment.NewLine]" />
                                                                          <ccwa:ExecuteDataReader CommandText="[&quot;select convert(Int,CRMID) as LeadID from dbo.adapplicationexternalmap (nolock) where adenrollid = &quot; &amp; entity.Id]" DisplayName="ExecuteDataReader - Get LeadID from CRM" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_21">
                                                                            <ccwa:ExecuteDataReader.Body>
                                                                              <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                                                <ActivityAction.Argument>
                                                                                  <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                                                </ActivityAction.Argument>
                                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_39">
                                                                                  <Assign DisplayName="Assign LeadID" sap2010:WorkflowViewState.IdRef="Assign_39">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Int32">[LeadID]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("LeadID"),int32)]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_49" Text="[logPrefix+&quot;Advisor Assignment Workflow CRM Update****LeadID = &quot; &amp; LeadID.ToString + Environment.NewLine + Environment.NewLine]" />
                                                                                </Sequence>
                                                                              </ActivityAction>
                                                                            </ccwa:ExecuteDataReader.Body>
                                                                          </ccwa:ExecuteDataReader>
                                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_50" Text="[logPrefix+&quot;Advisor Assignment Workflow CRM Update****Ends Get LeadID Sequence&quot; + Environment.NewLine + Environment.NewLine]" />
                                                                        </Sequence>
                                                                        <FlowStep.Next>
                                                                          <FlowStep x:Name="__ReferenceID23" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                                                                            <Sequence DisplayName="Update CRM Status" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_51" Text="[logPrefix+&quot;Advisor Assignment Workflow****Begin Update CNS Promotion Status&quot; &amp; LeadID.ToString + Environment.NewLine]" />
                                                                              <If Condition="[LeadID&gt;0]" sap2010:WorkflowViewState.IdRef="If_9">
                                                                                <If.Then>
                                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                                                    <ccwa:ExecuteDataReader CommandText="[&quot;exec SprocTPS_UpdateCRMStatus 4,1,&quot; &amp; LeadID]" ConnectionStringName="CRMConnection" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_22">
                                                                                      <ccwa:ExecuteDataReader.Body>
                                                                                        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                                                          <ActivityAction.Argument>
                                                                                            <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                                                          </ActivityAction.Argument>
                                                                                          <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                                                                            <TryCatch.Try>
                                                                                              <Sequence DisplayName="Update CRM Status" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:Int32">[crmUpdateStatus]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:Int32">[ctype(CurrentRow("Status"), Int32)]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <If Condition="[crmUpdateStatus &gt; 0]" sap2010:WorkflowViewState.IdRef="If_10">
                                                                                                  <If.Then>
                                                                                                    <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_53" Text="[&quot;Advisor Assignment....CRM Updates: CRM status update successful. Status: &quot; &amp;crmUpdateStatus &amp; Environment.NewLine]" />
                                                                                                  </If.Then>
                                                                                                  <If.Else>
                                                                                                    <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_54" Level="Error" Text="[&quot;Advisor Assignment....CRM Updates: CRM status update failed. Status: &quot; &amp;crmUpdateStatus &amp; Environment.NewLine]" />
                                                                                                  </If.Else>
                                                                                                </If>
                                                                                              </Sequence>
                                                                                            </TryCatch.Try>
                                                                                            <TryCatch.Catches>
                                                                                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                                                  <ActivityAction.Argument>
                                                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                  </ActivityAction.Argument>
                                                                                                  <Sequence DisplayName="Error Log" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                                                                    <ccwa:LogObject sap2010:WorkflowViewState.IdRef="LogObject_1" Object="[exception]" />
                                                                                                    <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_55" Level="Error" Text="Advisor Assignment....CRM STATUS UPDATE ERROR: Enable to update status from the CRM Update proc." />
                                                                                                  </Sequence>
                                                                                                </ActivityAction>
                                                                                              </Catch>
                                                                                            </TryCatch.Catches>
                                                                                          </TryCatch>
                                                                                        </ActivityAction>
                                                                                      </ccwa:ExecuteDataReader.Body>
                                                                                    </ccwa:ExecuteDataReader>
                                                                                  </Sequence>
                                                                                </If.Then>
                                                                                <If.Else>
                                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_56" Level="Error" Text="[logPrefix+&quot;Advisor Assignment....CRM Updates: CRM Status update skipped as LeadID is invalid. LeadID: &quot; &amp; LeadID &amp; Environment.NewLine]" />
                                                                                </If.Else>
                                                                              </If>
                                                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_52" Text="[logPrefix+&quot;Advisor Assignment....CRM Updates***End Update CNS Promotion Status&quot; + Environment.NewLine]" />
                                                                            </Sequence>
                                                                            <FlowStep.Next>
                                                                              <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_2">
                                                                                <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_4" Text="[Environment.NewLine + Environment.NewLine +logPrefix+ &quot;*****BEGIN Advisor Assignemnt Workflow - &quot; &amp; Reason &amp; &quot;*****&quot; + Environment.NewLine + Environment.NewLine]" />
                                                                                <FlowStep.Next>
                                                                                  <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                                                                                    <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="[Reason]" />
                                                                                  </FlowStep>
                                                                                </FlowStep.Next>
                                                                              </FlowStep>
                                                                            </FlowStep.Next>
                                                                          </FlowStep>
                                                                        </FlowStep.Next>
                                                                      </FlowStep>
                                                                    </FlowStep.Next>
                                                                  </FlowStep>
                                                                </FlowStep.Next>
                                                              </FlowStep>
                                                            </FlowDecision.True>
                                                            <FlowDecision.False>
                                                              <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                                                                <Assign DisplayName="Assign AD advisor by mapping" sap2010:WorkflowViewState.IdRef="Assign_24">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Int32">[ADAdvisor]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Int32">[ADAdvisor]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <FlowStep.Next>
                                                                  <x:Reference>__ReferenceID0</x:Reference>
                                                                </FlowStep.Next>
                                                              </FlowStep>
                                                            </FlowDecision.False>
                                                          </FlowDecision>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </FlowDecision.True>
                                                    <FlowDecision.False>
                                                      <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_12">
                                                        <Sequence DisplayName="Get MC Advisors" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_27" Text="[logPrefix+ &quot;---Begin Get MC Advisors---&quot; + Environment.NewLine]" />
                                                          <ccwa:ExecuteDataReader CommandText="[&quot;SELECT Top 1 PG.AdProgramGroupID FROM AdEnroll E (NOLOCK) JOIN AdProgramVersion PV (NOLOCK) ON E.adProgramVersionID = PV.AdProgramVersionID JOIN AdProgramVersionProgramGroup PVPG (NOLOCK) ON PVPG.AdProgramVersionID = PV.AdProgramVersionID JOIN AdProgramGroup PG (NOLOCK) ON PVPG.AdProgramGroupID = PG.AdProgramGroupID WHERE PG.Descrip LIKE 'School of%' AND E.AdEnrollID = &quot; &amp; Entity.Id]" DisplayName="ExecuteDataReader - ProgramGroupID" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_12">
                                                            <ccwa:ExecuteDataReader.Body>
                                                              <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                                </ActivityAction.Argument>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                                                                  <Assign DisplayName="Assign AdProgramGroupID" sap2010:WorkflowViewState.IdRef="Assign_26">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">[AdProgramGroupID]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">[Directcast(CurrentRow("AdProgramGroupID"),int32)]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_28" Text="[logPrefix+ &quot;AdProgramGroupID = &quot; &amp; AdProgramGroupID &amp; Environment.NewLine]" />
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ccwa:ExecuteDataReader.Body>
                                                          </ccwa:ExecuteDataReader>
                                                          <ccwa:ExecuteDataReader CommandText="[&quot;Select Convert(Int,SIS.[tExternalSisID]) as MCAdvisor From [tblObjectType20018_1] AOI_1 (NOLOCK) JOIN [tblObjectType20018] AOI (NOLOCK) ON AOI.AID = AOI_1.NID JOIN [tblObjectType20036] SIS (NOLOCK) ON SIS.aID = AOI_1.[FldNumeric22280] WHERE AOI.[tExternalSisID] = &quot; &amp; AdProgramGroupID]" ConnectionStringName="CRMConnection" DisplayName="ExecuteDataReader - Get Advisor SystaffIDs from CRM" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_13">
                                                            <ccwa:ExecuteDataReader.Body>
                                                              <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                                </ActivityAction.Argument>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                                                                  <Assign DisplayName="Assign MCAdvisor" sap2010:WorkflowViewState.IdRef="Assign_27">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">[MCAdvisor]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("MCAdvisor"),int32)]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_29" Text="[logPrefix+&quot;MCAdvisor = &quot; &amp; MCAdvisor &amp; Environment.NewLine + Environment.NewLine]" />
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ccwa:ExecuteDataReader.Body>
                                                          </ccwa:ExecuteDataReader>
                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_30" Text="[logPrefix+ &quot;---End Get MC Advisors---&quot; + Environment.NewLine]" />
                                                        </Sequence>
                                                        <FlowStep.Next>
                                                          <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_11">
                                                            <Assign DisplayName="Assign MCAdvisor" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Int32">[ADAdvisor]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:Int32">[MCAdvisor]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <FlowStep.Next>
                                                              <x:Reference>__ReferenceID0</x:Reference>
                                                            </FlowStep.Next>
                                                          </FlowStep>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </FlowDecision.False>
                                                  </FlowDecision>
                                                </FlowDecision.True>
                                                <FlowDecision.False>
                                                  <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_14">
                                                    <Sequence DisplayName="Get Military Advisors" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_34" Text="[logPrefix+ &quot;---Begin Get Military Advisors---&quot; + Environment.NewLine]" />
                                                      <ccwa:ExecuteDataReader CommandText="Exec SPROC_AdvisorAssignment_GetMilitaryAdvisor" DisplayName="ExecuteDataReader - Get Program Advisor" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_17">
                                                        <ccwa:ExecuteDataReader.Body>
                                                          <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                            </ActivityAction.Argument>
                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                              <Assign DisplayName="Assign MilitaryAdvisor" sap2010:WorkflowViewState.IdRef="Assign_34">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Int32">[MilitaryAdvisor]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("SyStaffID"),int32)]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_40" Text="[logPrefix+ &quot;MilitaryAdvisor = &quot; &amp; MilitaryAdvisor &amp; Environment.NewLine]" />
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ccwa:ExecuteDataReader.Body>
                                                      </ccwa:ExecuteDataReader>
                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_36" Text="[logPrefix+&quot;---End Get Military Advisors---&quot; + Environment.NewLine]" />
                                                    </Sequence>
                                                    <FlowStep.Next>
                                                      <FlowStep x:Name="__ReferenceID17" sap2010:WorkflowViewState.IdRef="FlowStep_13">
                                                        <Assign DisplayName="Assign MilitaryAdvisor" sap2010:WorkflowViewState.IdRef="Assign_30">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[ADAdvisor]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[MilitaryAdvisor]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <FlowStep.Next>
                                                          <x:Reference>__ReferenceID0</x:Reference>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </FlowStep.Next>
                                                  </FlowStep>
                                                </FlowDecision.False>
                                              </FlowDecision>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowDecision.True>
                                        <FlowDecision.False>
                                          <FlowStep x:Name="__ReferenceID21" sap2010:WorkflowViewState.IdRef="FlowStep_19">
                                            <Sequence DisplayName="Get Graduate Advisors" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_44" Text="[logPrefix+&quot;---Begin Graduate Advisors---&quot; + Environment.NewLine]" />
                                              <ccwa:ExecuteDataReader CommandText="[&quot;SELECT PV.AdDegreeID FROM AdEnroll E (NOLOCK) JOIN Adprogramversion PV (NOLOCK) ON E.adProgramVersionID = PV.AdProgramVersionID where AdenrollID = &quot; &amp; Entity.Id]" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_19">
                                                <ccwa:ExecuteDataReader.Body>
                                                  <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                    </ActivityAction.Argument>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                      <Assign DisplayName="Assign AdDegreeID" sap2010:WorkflowViewState.IdRef="Assign_37">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Int32">[AdDegreeID]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Int32">[Directcast(CurrentRow("AdDegreeID"),int32)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_46" Text="[logPrefix+ &quot;AdDegreeID = &quot; &amp; AdDegreeID &amp; Environment.NewLine]" />
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ccwa:ExecuteDataReader.Body>
                                              </ccwa:ExecuteDataReader>
                                              <ccwa:ExecuteDataReader CommandText="[&quot;Select Convert(Int,SIS.[tExternalSisID]) as GradAdvisor From [tblObjectType20020_1] DL_1 (NOLOCK) JOIN [tblObjectType20020] DL (NOLOCK) ON DL.AID = DL_1.NID JOIN [tblObjectType20036] SIS (NOLOCK) ON SIS.aID = DL_1.[FldNumeric22282] WHERE DL.[tExternalSisID] = &quot; &amp; AdDegreeID]" ConnectionStringName="CRMConnection" DisplayName="ExecuteDataReader - Get Advisor SystaffIDs from CRM" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_20">
                                                <ccwa:ExecuteDataReader.Body>
                                                  <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                    </ActivityAction.Argument>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                      <Assign DisplayName="Assign GradAdvisor" sap2010:WorkflowViewState.IdRef="Assign_38">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Int32">[GradAdvisor]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("GradAdvisor"),int32)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_47" Text="[logPrefix+ &quot;GradAdvisor = &quot; &amp; GradAdvisor &amp; Environment.NewLine + Environment.NewLine]" />
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ccwa:ExecuteDataReader.Body>
                                              </ccwa:ExecuteDataReader>
                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_45" Text="[logPrefix+ &quot;---End Graduate Advisors---&quot; + Environment.NewLine]" />
                                            </Sequence>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID19" sap2010:WorkflowViewState.IdRef="FlowStep_16">
                                                <Assign DisplayName="Assign GradAdvisor" sap2010:WorkflowViewState.IdRef="Assign_32">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[ADAdvisor]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[GradAdvisor]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <FlowStep.Next>
                                                  <x:Reference>__ReferenceID0</x:Reference>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowDecision.False>
                                      </FlowDecision>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <x:Reference>__ReferenceID1</x:Reference>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <x:Reference>__ReferenceID14</x:Reference>
    <x:Reference>__ReferenceID15</x:Reference>
    <x:Reference>__ReferenceID16</x:Reference>
    <x:Reference>__ReferenceID17</x:Reference>
    <x:Reference>__ReferenceID18</x:Reference>
    <x:Reference>__ReferenceID19</x:Reference>
    <x:Reference>__ReferenceID20</x:Reference>
    <x:Reference>__ReferenceID21</x:Reference>
    <x:Reference>__ReferenceID22</x:Reference>
    <x:Reference>__ReferenceID23</x:Reference>
    <x:Reference>__ReferenceID24</x:Reference>
    <x:Reference>__ReferenceID25</x:Reference>
    <x:Reference>__ReferenceID26</x:Reference>
    <sads:DebugSymbol.Symbol>d5QBXFxDbGllbnRcQyRcVXNlcnNca2Vza2lsbGFcc291cmNlXGdpdFxXb3JrZmxvd3NcQWR2aXNvckFzc2lnbm1lbnRcQ21jLk5leHVzLlNpcy5BY2FkZW1pY3MuU3R1ZGVudEVucm9sbG1lbnRQZXJpb2RfU2F2ZWRFdmVudF9BZHZpc29yX0Fzc2lnbm1lbnQueGFtbLcCTAPJBg8CAQFONE5TAgEGTzRPOwIBBVAzUDYCAQRWM1Y6AgEDWDNYOgIBAmgJdRQDAfsCeA14gQEDAfgCexGSARwDAekClQEVlQGzAQMB5QKXAUeXAcECAwHkAsYEUcYE0wIDAeICyQRVyQSyAQMB3wKaAR2aAdoCAwHdAp0BIdABLAMBwALTASXqATADAbEC7AFY7AF2AwGvAtsFLYYGOAMBlgKJBjGQBjoDAZECsANF7gNQAwHgAfEDSYgEVAMB0gGLBE3DBFgDAbAB7wEthgI4AwGhAYgCYIgCggEDAZ8BrAU1wwVAAwGRAcYFOc0FQgMBjAGKAmOKAnoDAYsB6wQ5lgVEAgFymQU9oAVGAgFtjQI5oAJSAgFjogJsogKSAQIBYdgEQd8ESgIBXKUCQa0DTAIBB2wLbHkDAYADbQt0FAMB/AJ4THh+AwH5AnwTfKcBAwH2An0TkAEsAwHsApEBE5EBpQEDAeoClQFUlQFoAwHoApUBoAGVAbABAwHmAsYEkAHGBNACAwHjAskEpQHJBK8BAwHgApoBXZoB1wIDAd4CngEjngG1AQMB2wKfASOyATwDAdICswEjzgE8AwHDAs8BI88BswEDAcEC1AEn1AGxAQMBvgLVASfoAUADAbQC6QEn6QGvAQMBsgLcBS/cBb8BAwGtAt0FL/AFSAMBpALxBS+EBkgDAZkChQYvhQa+AQMBlwKOBluOBmgDAZQCiwZciwZnAwGSArEDR7ED1gEDAY8CsgNHsgO1AgMBjQKzA0fPA0wDAfgB0ANH7ANMAwHjAe0DR+0D1AEDAeEB8gNL8gOWAgMB3gHzA0uGBGQDAdUBhwRLhwSWAgMB0wGMBE+MBJgCAwHQAY0ET8EEVAMBswHCBE/CBIUCAwGxAfABL/ABvQEDAa4B8QEvhAJIAwGkAYUCL4UCugEDAaIBrQU3rQXMAQMBnQGuBTfBBVADAZQBwgU3wgXJAQMBkgHLBWPLBXQDAY8ByAVkyAVvAwGNAewEO+wEygEDAYkB7QQ7gAVUAwGAAYEFO5QFVAIBdZUFO5UFyAECAXOeBWeeBXICAXCbBWibBXMCAW6NAl2NArYEAgFskwI/nQJKAgFk3QRr3QR2AgFf2gRs2gR3AgFdpgJDpgLXAQIBWqcCQ7oCXAIBUbsCQ7sChwUCAUu8AkOrA00CAQqsA0OsA+oBAgEIbGhsdgMBgQNyNnK6AQMB/wJvN29CAwH9AnxSfKQBAwH3An03fYUBAwH1AoMBGY0BJAMB7QKRAVKRAaIBAwHrAp4BY54BsgEDAdwCnwFHnwHfAQMB2gKlASmvATQDAdMCswFHswHkBAMB0AKzAfoEswGJBQMBzwK5ASnLATQDAcQCzwFjzwGwAQMBwgLUAWfUAa4BAwG/AtUBS9UBowMDAb0C2wEt5QE4AwG1AukBZ+kBrAEDAbMC3AVv3AW8AQMBrgLdBVPdBYYCAwGsAuMFNe0FQAMBpQLxBVPxBfgCAwGiAvEFjgPxBZ0DAwGhAvcFNYEGQAMBmgKFBm+FBrsBAwGYArEDhwGxA9MBAwGQArIDhwGyA7ICAwGOArMDVbMDaQMB+QG1A0vNA2QDAfsB0ANV0ANpAwHkAdIDS+oDZAMB5gHtA4cB7QPRAQMB4gHyA4sB8gOTAgMB3wHzA2/zA/EBAwHdAfkDUYMEXAMB1gGHBIsBhwSTAgMB1AGMBI8BjASVAgMB0QGNBF2NBGwDAbQBjwRTvAReAwG4Ab8EU78EwAIDAbYBwgSPAcIEggIDAbIB8AFv8AG6AQMBrwHxAVPxAbECAwGtAfcBNYECQAMBpQGFAm+FArcBAwGjAa0Fd60FyQEDAZ4BrgVbrgWMAQMBnAG0BT2+BUgDAZUBwgV3wgXGAQMBkwHsBHvsBMcBAwGKAe0EX+0E8wMDAYgB8wRB/QRMAwGBAYEFX4EFjgMCAX6BBaQDgQWzAwIBfYcFQZEFTAIBdpUFe5UFxQECAXSUAkGbAkoCAWecAkGcAuABAgFlpgKDAaYC1AECAVunAmenAvsDAgFZrQJJtwJUAgFSuwJiuwLkAwIBT7sCjwS7ApwEAgFNuwL6A7sCiQQCAUy8AsYBvALsAQIBSsECR6kDUgIBC6wDgwGsA+cBAgEJhAEbiwEkAwHwAowBG4wBvwEDAe4CpgErrQE0AwHWAq4BK64BuwEDAdQCugErwQE0AwHLAsIBK8kBNAMBxwLKASvKAYQCAwHFAtwBL+MBOAMBuALkAS/kAb0BAwG2AuQFN+sFQAMBqALsBTfsBc0BAwGmAvgFN/8FQAMBnQKABjeABuUBAwGbArUDb7UDzQIDAYwCuwNRygNcAwH8AdIDb9IDzQIDAfcB2ANR5wNcAwHnAfoDU4EEXAMB2QGCBFOCBKUCAwHXAZAEVbsEbgMBuQG/BKEBvwS9AgMBtwH4ATf/AUADAagBgAI3gALNAQMBpgG1BT+8BUgDAZgBvQU/vQXfAQMBlgH0BEP7BEwDAYQB/ARD/ATlAQMBggGIBUOPBUwCAXmQBUOQBewBAgF3mQJsmQKeAQIBapYCbZYCfgIBaJwCgQGcAt0BAgFmrgJLtQJUAgFVtgJLtgLtAQIBU8ICSckCUgIBRsoCSdECUgIBQtICSagDYgIBDIkBRokBewMB8wKGAUeGAVsDAfECjAFajAG8AQMB7wKrAVWrAX4DAdkCqAFWqAFfAwHXAq4Ba64BuAEDAdUCvwFVvwGAAQMBzgK8AVa8AWEDAcwCxwFVxwGAAQMBygLEAVbEAWEDAcgCygFrygGBAgMBxgLhAVrhAYMBAwG7At4BW94BYwMBuQLkAW/kAboBAwG3AukFYekFjQEDAasC5gVi5gVuAwGpAuwFd+wFygEDAacC/QVh/QWOAQMBoAL6BWL6BW8DAZ4CgAZ3gAbiAQMBnAK8A1PDA1wDAYcCxANTxAPrAQMBhQLFA1PJA1gDAf0B2QNT4ANcAwHyAeEDU+ED6wEDAfAB4gNT5gNYAwHoAf8Dff8DpQEDAdwB/AN+/AOGAQMB2gGCBJMBggSiAgMB2AGQBHmQBLgBAwHOAZAEzgGQBN0BAwHNAZYEW7gEZgMBugH9AWL9AY8BAwGrAfoBY/oBbwMBqQGAAneAAsoBAwGnAboFaboFlAEDAZsBtwVqtwV7AwGZAb0Ff70F3AEDAZcB+QRt+QSfAQMBhwH2BG72BIABAwGFAfwEgwH8BOIBAwGDAY0FbY0FmAECAXyKBW6KBXkCAXqQBYMBkAXpAQIBeLMCdbMCpwECAViwAnawAogBAgFWtgKLAbYC6gECAVTHAnPHApkBAgFJxAJ0xAJ/AgFHzwJzzwKeAQIBRcwCdMwChAECAUPSAm3SAuYBAgE/2AJPpQNaAgENwQN+wQOsAQMBigK+A3++A4wBAwGIAsQDkwHEA+gBAwGGAsUDYcUDhAEDAf4BxwNXxwPCAgMBgALeA37eA6wBAwH1AdsDf9sDjAEDAfMB4QOTAeED6AEDAfEB4gNh4gOEAQMB6QHkA1fkA8ICAwHrAZgEX6kEagMBwQGxBGO0BG4DAbsB2QJR4AJaAgE74QJR4QL5AgIBOeICUaMDVgIBEKQDUaQD0gICAQ7HA7ICxwO/AgMBhALHA/4BxwOBAgMBgwLHA4oCxwOXAgMBgQLkA7IC5AO/AgMB7wHkA/4B5AOBAgMB7gHkA4oC5AOXAgMB7AGZBGGgBGoDAckBoQRhqARmAwHCAbIEZbIEugEDAb4BswRlswSYAgMBvAHeAnveAqcBAgE+2wJ82wKIAQIBPOECkQHhAvYCAgE64gJf4gKAAQIBEeQCVY0DWgIBH5ADVaEDYAIBFKQDkQGkA88CAgEPngSLAZ4ErwEDAcwBmwSMAZsEnQEDAcoBoQRvoQSJAQMBwwGjBGWjBLACAwHHAaYEZaYEugIDAcUBsgSqAbIEtwEDAb8BswSzAbMElQIDAb0B5AJj5AKJAQIBIOYCWfcCZAIBLvoCWYsDZAIBI5EDV5gDYAIBGpkDV6ADYAIBFaMEpQGjBK0CAwHIAaYEswGmBLcCAwHGAecCW+4CZAIBNO8CW/YCZAIBL/sCW4IDZAIBKYMDW4oDZAIBJJYDgQGWA4wBAgEdkwOCAZMDjQECARueA4EBngOWAQIBGJsDggGbA5cBAgEW7AKFAewCkAECATfpAoYB6QKRAQIBNfQChQH0ApEBAgEy8QKGAfECmwECATCAA4UBgAOQAQIBLP0ChgH9ApEBAgEqiAOFAYgDmgECASeFA4YBhQObAQIBJQ==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetWorkflowInstanceId_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_45" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_1" sap:VirtualizedContainerService.HintSize="214,75">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_2" sap:VirtualizedContainerService.HintSize="368,111" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_5" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_1" sap:VirtualizedContainerService.HintSize="368,537" />
      <sap2010:ViewStateData Id="LogLine_3" sap:VirtualizedContainerService.HintSize="368,111" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetEntity`1_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_58" sap:VirtualizedContainerService.HintSize="214,75">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_22" sap:VirtualizedContainerService.HintSize="3020,111" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_23" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_9" sap:VirtualizedContainerService.HintSize="3020,537" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_24" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="264,435">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_10" sap:VirtualizedContainerService.HintSize="3020,637" />
      <sap2010:ViewStateData Id="LogLine_25" sap:VirtualizedContainerService.HintSize="3020,111" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_31" sap:VirtualizedContainerService.HintSize="1834,111" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_32" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_14" sap:VirtualizedContainerService.HintSize="1834,537" />
      <sap2010:ViewStateData Id="LogLine_33" sap:VirtualizedContainerService.HintSize="1834,111" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_41" sap:VirtualizedContainerService.HintSize="1101,111" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_42" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_18" sap:VirtualizedContainerService.HintSize="1101,537" />
      <sap2010:ViewStateData Id="LogLine_43" sap:VirtualizedContainerService.HintSize="1101,111" />
      <sap2010:ViewStateData Id="Sequence_35" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_26" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_11" sap:VirtualizedContainerService.HintSize="200,36">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_12" sap:VirtualizedContainerService.HintSize="2354,111" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_13" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_4" sap:VirtualizedContainerService.HintSize="2354,537" />
      <sap2010:ViewStateData Id="ExecuteQuery_1" sap:VirtualizedContainerService.HintSize="2354,114" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="880,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="880,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="842,60" />
      <sap2010:ViewStateData Id="LogLine_17" sap:VirtualizedContainerService.HintSize="842,111" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="553,432" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="842,580" />
      <sap2010:ViewStateData Id="LogLine_16" sap:VirtualizedContainerService.HintSize="842,111" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="864,1106">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_5" sap:VirtualizedContainerService.HintSize="880,1308" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="902,1632">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="2354,1780" />
      <sap2010:ViewStateData Id="LogLine_15" sap:VirtualizedContainerService.HintSize="2354,111" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_10" sap:VirtualizedContainerService.HintSize="1244,111" />
      <sap2010:ViewStateData Id="LogLine_18" sap:VirtualizedContainerService.HintSize="1244,111" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogLine_19" sap:VirtualizedContainerService.HintSize="464,111" />
      <sap2010:ViewStateData Id="AssignStudentAdvisor_1" sap:VirtualizedContainerService.HintSize="314,153" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,301" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="486,676">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_6" sap:VirtualizedContainerService.HintSize="1117,878" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="1244,1026" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogLine_20" sap:VirtualizedContainerService.HintSize="464,111" />
      <sap2010:ViewStateData Id="AssignStudentAdvisor_4" sap:VirtualizedContainerService.HintSize="314,153" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,301" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="486,676">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_7" sap:VirtualizedContainerService.HintSize="1119,878" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="1244,1026" />
      <sap2010:ViewStateData Id="LogLine_11" sap:VirtualizedContainerService.HintSize="1244,111" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_48" sap:VirtualizedContainerService.HintSize="630,111" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_49" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_21" sap:VirtualizedContainerService.HintSize="630,537" />
      <sap2010:ViewStateData Id="LogLine_50" sap:VirtualizedContainerService.HintSize="630,111" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_51" sap:VirtualizedContainerService.HintSize="781,111" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogLine_53" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="LogLine_54" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="464,259" />
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="486,483">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogObject_1" sap:VirtualizedContainerService.HintSize="214,22" />
      <sap2010:ViewStateData Id="LogLine_55" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="Sequence_44" sap:VirtualizedContainerService.HintSize="236,294">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="490,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="504,710">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_22" sap:VirtualizedContainerService.HintSize="520,912">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="542,1036">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_56" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="781,1184" />
      <sap2010:ViewStateData Id="LogLine_52" sap:VirtualizedContainerService.HintSize="781,111" />
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_4" sap:VirtualizedContainerService.HintSize="214,75">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">1450,1759</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">1213,1732.5</av:Point>
            <av:Size x:Key="ShapeSize">214,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">1427,1770 1450,1770</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">910,1744.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">1110,1770 1213,1770</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">610,1744.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">810,1770 910,1770</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">250,1744.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">450,1770 610,1770</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,1604</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220,1656 220,1686 350,1686 350,1744.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">359,1590</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">480,1650 480,1680 350,1680 350,1744.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">265,1406.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">335,1450 480,1450 480,1590</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">265,1450 220,1450 220,1604</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,1302</av:Point>
            <av:Size x:Key="ShapeSize">200,36</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,1338 300,1406.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_27" sap:VirtualizedContainerService.HintSize="2354,111" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_28" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_12" sap:VirtualizedContainerService.HintSize="2354,537" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_29" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_13" sap:VirtualizedContainerService.HintSize="2354,537" />
      <sap2010:ViewStateData Id="LogLine_30" sap:VirtualizedContainerService.HintSize="2354,111" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">559,1350</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">680,1410 680,1691.92 350,1691.92 350,1744.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">580,1254</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">680,1306 680,1350</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="89,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">346,1186.5</av:Point>
            <av:Size x:Key="ShapeSize">89,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">434,1230 680,1230 680,1254</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">346,1230 300,1230 300,1302</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_34" sap:VirtualizedContainerService.HintSize="316,111" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_40" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_17" sap:VirtualizedContainerService.HintSize="316,537" />
      <sap2010:ViewStateData Id="LogLine_36" sap:VirtualizedContainerService.HintSize="316,111" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">799,1480</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">920,1540 920,1707.92 350,1707.92 350,1744.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">820,1324</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">920,1375 920,1480</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_5" sap:VirtualizedContainerService.HintSize="82,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">549,1106.5</av:Point>
            <av:Size x:Key="ShapeSize">82,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">631,1150 920,1150 920,1324</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">549,1150 390,1150 390,1186.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_18">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">490,1024</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">590,1076 590,1106.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_44" sap:VirtualizedContainerService.HintSize="1559,111" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_46" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_19" sap:VirtualizedContainerService.HintSize="1559,537" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_47" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_20" sap:VirtualizedContainerService.HintSize="1559,537" />
      <sap2010:ViewStateData Id="LogLine_45" sap:VirtualizedContainerService.HintSize="1559,111" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">1019,1200</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">1140,1260 1140,1714.5 350,1714.5 350,1744.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_19">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">1040,1024</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">1140,1076 1140,1200</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_4" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">715,926.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">785,970 1140,970 1140,1024</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">715,970 590,970 590,1024</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">650,824</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">750,876 750,926.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">650,724</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">750,776 750,824</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_25">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">643,542.5</av:Point>
            <av:Size x:Key="ShapeSize">214,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">750,617.5 750,724</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">865,426.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">935,470 1320,470 1320,1732.5</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">865,470 750,470 750,542.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_24">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">800,359</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">900,381 900,426.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">800,284</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">900,336 900,359</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">793,192</av:Point>
            <av:Size x:Key="ShapeSize">214,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">900,268 900,284</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_27">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">800,94</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">900,146 900,192</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1674,1921">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">870,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">900,77.5 900,94</av:PointCollection>
            <x:Double x:Key="Width">1660</x:Double>
            <x:Double x:Key="Height">1884.92</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Advisor_Assignment_1" sap:VirtualizedContainerService.HintSize="1714,2001" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>