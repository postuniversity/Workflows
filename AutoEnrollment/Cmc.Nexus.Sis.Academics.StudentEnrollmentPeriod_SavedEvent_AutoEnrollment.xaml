<Activity mc:Ignorable="sap sap2010 sads" x:Class="AutoEnrollment"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:cce="clr-namespace:Cmc.Core.Eventing;assembly=Cmc.Core"
 xmlns:ccwa="clr-namespace:Cmc.Core.Workflow.Activities;assembly=Cmc.Core.Workflow"
 xmlns:ccwae="clr-namespace:Cmc.Core.Workflow.Activities.EntityModel;assembly=Cmc.Core.Workflow"
 xmlns:cnae="clr-namespace:Cmc.Nexus.Academics.Entities;assembly=Cmc.Nexus.Academics.Contracts"
 xmlns:cnae1="clr-namespace:Cmc.Nexus.Admissions.Entities;assembly=Cmc.Nexus.Admissions.Contracts"
 xmlns:cnaw="clr-namespace:Cmc.Nexus.Academics.Workflow;assembly=Cmc.Nexus.Academics.Workflow"
 xmlns:cnce="clr-namespace:Cmc.Nexus.Common.Entities;assembly=Cmc.Nexus.Common.Contracts"
 xmlns:cnce1="clr-namespace:Cmc.Nexus.Crm.Entities;assembly=Cmc.Nexus.Crm.Contracts"
 xmlns:cncs="clr-namespace:Cmc.Nexus.Common.Services;assembly=Cmc.Nexus.Common.Contracts"
 xmlns:cncw="clr-namespace:Cmc.Nexus.Common.Workflow;assembly=Cmc.Nexus.Common.Workflow"
 xmlns:cncw1="clr-namespace:Cmc.Nexus.Crm.Workflow;assembly=Cmc.Nexus.Crm.Workflow"
 xmlns:cnsa="clr-namespace:Cmc.Nexus.Sis.Academics;assembly=Cmc.Nexus.Contracts"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="entity" Type="InOutArgument(cnsa:StudentEnrollmentPeriod)" />
    <x:Property Name="args" Type="InOutArgument(s:EventArgs)" />
    <x:Property Name="event" Type="InOutArgument(cce:SavedEvent)" />
    <x:Property Name="EnrollmentPeriod" Type="InArgument(cnae:StudentEnrollmentPeriodEntity)" />
    <x:Property Name="Student" Type="InArgument(cnce:StudentEntity)" />
    <x:Property Name="ProgramVersion" Type="InArgument(cnae:ProgramVersionEntity)" />
    <x:Property Name="Degree" Type="InArgument(cnae:DegreeEntity)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>AutoEnrollment_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Cmc.Core.Eventing</x:String>
      <x:String>Cmc.Nexus.Sis.Academics</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Cmc.Core.EntityModel</x:String>
      <x:String>Cmc.Core.ComponentModel</x:String>
      <x:String>Cmc.Nexus.Converters</x:String>
      <x:String>Cmc.Nexus.Academics.Entities</x:String>
      <x:String>Cmc.Nexus.Common.Entities</x:String>
      <x:String>Cmc.Nexus.Common</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Text</x:String>
      <x:String>Cmc.Nexus.Admissions.Entities</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Cmc.Nexus.Crm.Entities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Cmc.Core</AssemblyReference>
      <AssemblyReference>Cmc.Nexus.Contracts</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Cmc.Nexus.CVue</AssemblyReference>
      <AssemblyReference>Cmc.Nexus.Academics.Contracts</AssemblyReference>
      <AssemblyReference>Cmc.Nexus.Common.Contracts</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Cmc.Nexus.Admissions.Contracts</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Cmc.Nexus.Crm.Contracts</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Default="Not a Status Transition or Incorrect school status" Name="reason" />
      <Variable x:TypeArguments="x:String" Name="ErrorsEmail_Config" />
      <Variable x:TypeArguments="x:String" Name="TriggerStatusValid" />
      <Variable x:TypeArguments="x:Int32" Name="NDSEnrollmentSchoolStatusID_Config" />
      <Variable x:TypeArguments="x:Int32" Name="FinalSchoolStatusID" />
      <Variable x:TypeArguments="x:Int32" Name="AcademicAdvisorID" />
      <Variable x:TypeArguments="x:Int32" Name="ShiftID_Config" />
      <Variable x:TypeArguments="x:Int32" Name="FinalShiftID" />
      <Variable x:TypeArguments="x:Int32" Name="FinalBillingMethodID" />
      <Variable x:TypeArguments="x:Int32" Name="FinalGradeLevelID" />
      <Variable x:TypeArguments="x:Int32" Name="UnderGradeLevelID_Config" />
      <Variable x:TypeArguments="x:Int32" Name="GradGradeLevelID_Config" />
      <Variable x:TypeArguments="s:DateTime" Name="FinalGradDate" />
      <Variable x:TypeArguments="s:DateTime" Name="FinalMidPointDate" />
      <Variable x:TypeArguments="s:DateTime" Name="FinalStartDate" />
      <Variable x:TypeArguments="s:DateTime" Name="FinalEnrollDate" />
      <Variable x:TypeArguments="s:DateTime" Name="FinalAplicationDate" />
      <Variable x:TypeArguments="x:String" Name="IsReAdmit" />
      <Variable x:TypeArguments="cce:ValidationMessageCollection" Default="[new ValidationMessageCollection]" Name="validationMessages" />
      <Variable x:TypeArguments="x:String" Default="AutoEnrollment@noreply.com" Name="Email_From" />
      <Variable x:TypeArguments="x:Int32" Name="isApplicant" />
      <Variable x:TypeArguments="x:Int32" Name="LeadID" />
      <Variable x:TypeArguments="x:String" Name="getCatalogYear" />
      <Variable x:TypeArguments="x:Int32" Name="catalogyearId" />
      <Variable x:TypeArguments="cnae1:ApplicantEntity" Name="applicantEntity" />
      <Variable x:TypeArguments="cce:ValidationMessageCollection" Default="[new Cmc.Core.Eventing.ValidationMessageCollection]" Name="valMsg" />
      <Variable x:TypeArguments="x:String" Name="getEthnicQuery" />
      <Variable x:TypeArguments="sd:DataSet" Name="dsEthnic" />
      <Variable x:TypeArguments="scg:List(x:Int32)" Name="lstEthnic" />
      <Variable x:TypeArguments="x:Int32" Name="ethnicId" />
      <Variable x:TypeArguments="s:Guid" Name="workFlowId" />
      <Variable x:TypeArguments="x:String" Default="AE WF: " Name="logPrefix" />
      <Variable x:TypeArguments="x:Int32" Name="InitialSchoolStatusID" />
      <Variable x:TypeArguments="cncs:ReferenceItem" Name="RefPOGDocTypeId" />
      <Variable x:TypeArguments="cncs:ReferenceItem" Name="RefPOGDocApproveStatusId" />
      <Variable x:TypeArguments="cnce1:DocumentEntity[]" Name="POGDocuments" />
      <Variable x:TypeArguments="cnae:DegreeEntity" Name="Degree" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID15" sap2010:WorkflowViewState.IdRef="FlowStep_31">
        <Sequence DisplayName="Init" sap2010:WorkflowViewState.IdRef="Sequence_40">
          <ccwa:GetWorkflowInstanceId sap2010:WorkflowViewState.IdRef="GetWorkflowInstanceId_3" Result="[workflowId]" />
          <Assign sap2010:WorkflowViewState.IdRef="Assign_79">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[logPrefix]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">[string.Format("{0} : Student: {1}: WorkflowId: {2} :  ", logPrefix, entity.StudentId, workflowId.ToString)]</InArgument>
            </Assign.Value>
          </Assign>
          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_61" Text="[logPrefix + &quot;****BEGIN AUTO ENROLLMENT WORKFLOW*****&quot;]" />
          <Sequence DisplayName="Get Triggering Status" sap2010:WorkflowViewState.IdRef="Sequence_39">
            <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_62" Text="[logPrefix+ &quot;---Begin Get Triggering Status---&quot;]" />
            <ccwa:ExecuteDataReader CommandText="[&quot;Exec SPROC_AutoEnroll_GetConfiguration &quot; &amp; Entity.Id &amp; &quot;, 'TriggeringStatus'&quot;]" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_24">
              <ccwa:ExecuteDataReader.Body>
                <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Assign DisplayName="Assign TriggerStatusValid" sap2010:WorkflowViewState.IdRef="Assign_80">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[TriggerStatusValid]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[DirectCast(CurrentRow("TriggerStatusValid"),string)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </ActivityAction>
              </ccwa:ExecuteDataReader.Body>
            </ccwa:ExecuteDataReader>
            <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_63" Text="[logPrefix+ &quot;--TriggerStatusValid = &quot; &amp; TriggerStatusValid + &quot;---End Get Triggering Status---&quot;]" />
          </Sequence>
          <If Condition="[TriggerStatusValid = &quot;True&quot;]" sap2010:WorkflowViewState.IdRef="If_27">
            <If.Then>
              <ccwae:GetEntity x:TypeArguments="cnae:StudentEnrollmentPeriodEntity" EntityId="[Entity.Id]" sap2010:WorkflowViewState.IdRef="GetEntity`1_7" Result="[EnrollmentPeriod]" />
            </If.Then>
            <If.Else>
              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_82" Text="[logPrefix + &quot;Invalid Trigger status,skipping Get StudentEnrollment, trigger status :&quot; &amp; TriggerStatusValid]" />
            </If.Else>
          </If>
        </Sequence>
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID2" Condition="[(Entity.HasChanged(Studentenrollmentperiod.StudentStatusIdProperty) AND TriggerStatusValid = &quot;True&quot;) AndAlso (EnrollmentPeriod.ProgramVersionId.Value &lt;&gt; 0 AND EnrollmentPeriod.StartDateId.GetValueOrDefault(0) &lt;&gt; 0)]" DisplayName="Valid Trigger Status and Valid Program Version" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_11">
                <ccwae:GetEntity x:TypeArguments="cnce:StudentEntity" EntityId="[Entity.StudentId]" sap2010:WorkflowViewState.IdRef="GetEntity`1_2" Result="[Student]" />
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_17">
                    <ccwae:GetEntity x:TypeArguments="cnae:ProgramVersionEntity" EntityId="[EnrollmentPeriod.ProgramVersionId.Value]" sap2010:WorkflowViewState.IdRef="GetEntity`1_3" Result="[ProgramVersion]" />
                    <FlowStep.Next>
                      <FlowDecision x:Name="__ReferenceID11" Condition="[ProgramVersion.IsDegreeProgram]" DisplayName="IsDegreeProgram" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_33">
                            <ccwae:GetEntity x:TypeArguments="cnae:DegreeEntity" EntityId="[ProgramVersion.DegreeId.Value]" sap2010:WorkflowViewState.IdRef="GetEntity`1_8" Result="[Degree]" />
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_29">
                                <Sequence DisplayName="Get Lookups" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_64" Text="[logPrefix + &quot; Get Lookups sequence started..&quot;]" />
                                  <cncw:LookupReferenceItem ValidationMessages="{x:Null}" DisplayName="Lookup POG DocType" sap2010:WorkflowViewState.IdRef="LookupReferenceItem_5" ItemId="194" ReferenceItem="[RefPOGDocTypeId]" ReferenceItemType="Cmc.Nexus.Models.Crm.DocumentType" />
                                  <cncw:LookupReferenceItem ValidationMessages="{x:Null}" DisplayName="Lookup Approved Doc Status" sap2010:WorkflowViewState.IdRef="LookupReferenceItem_6" ItemId="2" ReferenceItem="[RefPOGDocApproveStatusId]" ReferenceItemType="Cmc.Nexus.Models.Crm.DocumentStatus" />
                                  <cncw1:LookupStudentDocuments ValidationMessages="{x:Null}" DisplayName="Lookup Student Documents" DocumentTypeId="[RefPOGDocTypeId.Id]" Documents="[POGDocuments]" sap2010:WorkflowViewState.IdRef="LookupStudentDocuments_3" StudentId="[Entity.StudentId]" />
                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_65" Text="[logPrefix + &quot; Get Lookups sequence completed&quot;]" />
                                </Sequence>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_32">
                                    <Sequence DisplayName="Get Final School Status" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:Boolean" Name="POGApproved" />
                                      </Sequence.Variables>
                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_68" Text="[logPrefix+Environment.NewLine + Environment.NewLine + &quot;---Begin Determine FinalSchoolStatus---&quot; + Environment.NewLine + Environment.NewLine]" />
                                      <Sequence DisplayName="Get Initial School Status" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                        <ccwa:ExecuteDataReader CommandText="[&quot;SELECT CASE WHEN NOT EXISTS(SELECT * FROM AdEnroll E (NOLOCK) JOIN AdprogramVersion PV (NOLOCK) ON E.AdprogramVersionID = PV.AdProgramVersionID WHERE  SystudentID =  &quot; &amp; Entity.StudentId &amp; &quot; AND AdenrollID &lt;&gt; &quot; &amp; entity.Id &amp; &quot; AND E.Applicant=0) THEN (SELECT SS.SySchoolStatusID FROM [customer].[si_Configurations] SI (NOLOCK) JOIN SySchoolStatus SS (NOLOCK) ON SI.[Value] = SS.Code WHERE [Key] = 'GetAutoEnroll_ProvisionallyAcceptedStatusCode') ELSE (SELECT SS.SySchoolStatusID FROM [customer].[si_Configurations] SI (NOLOCK) JOIN SySchoolStatus SS (NOLOCK) ON SI.[Value] = SS.Code WHERE [Key] = 'GetAutoEnroll_ProvisionallyRe-AdmitStatusCode') END as InitialSchoolStatusID&quot;]" DisplayName="ExecuteDataReader - InitialStatus" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_33">
                                          <ccwa:ExecuteDataReader.Body>
                                            <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Set InitialStatus" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                <Assign DisplayName="Assign" sap2010:WorkflowViewState.IdRef="Assign_97">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[InitialSchoolStatusID]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("InitialSchoolStatusID"),Integer)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </ActivityAction>
                                          </ccwa:ExecuteDataReader.Body>
                                        </ccwa:ExecuteDataReader>
                                      </Sequence>
                                      <If Condition="[POGDocuments.Length&gt;0]" DisplayName="Get POG Status" sap2010:WorkflowViewState.IdRef="If_25">
                                        <If.Then>
                                          <Sequence DisplayName="Check POG Status" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                            <ForEach x:TypeArguments="cnce1:DocumentEntity" DisplayName="ForEach&lt;DocumentEntity&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[POGDocuments]">
                                              <ActivityAction x:TypeArguments="cnce1:DocumentEntity">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="cnce1:DocumentEntity" Name="item" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="POG Approved?" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                  <If Condition="[item.DocumentStatusId=RefPOGDocApproveStatusId.Id]" DisplayName="if" sap2010:WorkflowViewState.IdRef="If_24">
                                                    <If.Then>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_83">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[POGApproved]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_69" Text="[logPrefix+Environment.NewLine + &quot;--Is Approved POG = &quot; &amp; POGApproved.ToString &amp; Environment.NewLine + Environment.NewLine]" />
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_70" Text="[logPrefix + &quot;No approved POG found, found status : &quot; &amp; item.DocumentStatusId.ToString]" />
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </ActivityAction>
                                            </ForEach>
                                            <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_81" Text="[logPrefix + &quot; Get POG Status sequence completed&quot;]" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_72" Text="[logPrefix + &quot;No POG documents found &quot;]" />
                                        </If.Else>
                                      </If>
                                      <Sequence DisplayName="Get Final Status from DB" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                        <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_84" Text="[logPrefix + &quot;---Begin Get Final Status from DB ---&quot; + Environment.NewLine]" />
                                        <If Condition="[POGApproved]" sap2010:WorkflowViewState.IdRef="If_34">
                                          <If.Then>
                                            <ccwa:ExecuteDataReader CommandText="[String.Format(&quot;Select FinalSySchoolStatusID as FinalSchoolStatusID from customer.RegisteredStatusByPOGMap Where InitialSySchoolStatusID={0}&quot;,InitialSchoolStatusID)]" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_49">
                                              <ccwa:ExecuteDataReader.Body>
                                                <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                  </ActivityAction.Argument>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_116">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">[FinalSchoolStatusID]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("FinalSchoolStatusID"),Integer)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </ActivityAction>
                                              </ccwa:ExecuteDataReader.Body>
                                            </ccwa:ExecuteDataReader>
                                          </If.Then>
                                          <If.Else>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_117">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[FinalSchoolStatusID]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[InitialSchoolStatusID]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Else>
                                        </If>
                                        <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_85" Text="[logPrefix+&quot;*******End Get Final Status from DB sequence &quot; + Environment.NewLine +&quot;Final School Status ID= &quot;+FinalSchoolStatusID.ToString]" />
                                      </Sequence>
                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_77" Text="[logPrefix+Environment.NewLine + &quot;End Determine FinalSchoolStatus&quot; + Environment.NewLine+&quot;  Initial School Status ID = &quot;+InitialSchoolStatusID.ToString+Environment.NewLine+&quot;  Is POG Available = &quot; +POGApproved.ToString+Environment.NewLine+&quot;  Final School Status ID = &quot; +FinalSchoolStatusID.ToString+Environment.NewLine]" />
                                    </Sequence>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_18">
                                        <Sequence DisplayName="Get Default Academic Advisor" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_10" Text="[logPrefix+Environment.NewLine + Environment.NewLine + &quot;---Begin Get Default Academic Advisor---&quot; + Environment.NewLine + Environment.NewLine]" />
                                          <ccwa:ExecuteDataReader CommandText="[&quot;SELECT Top 1 SystaffID FROM SyAdvisorCampusDefaults ACD (Nolock) JOIN Systaffgroup SG (NOLOCK) ON ACD.SystaffGroupID = SG.SyStaffGroupID WHERE SG.Code = 'ACAD' AND ACD.SyCampusID = &quot; &amp; EnrollmentPeriod.CampusId]" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_1">
                                            <ccwa:ExecuteDataReader.Body>
                                              <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                </ActivityAction.Argument>
                                                <Assign DisplayName="Assign AdvisorID" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[AcademicAdvisorID]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Directcast(CurrentRow("SystaffID"), int32)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </ActivityAction>
                                            </ccwa:ExecuteDataReader.Body>
                                          </ccwa:ExecuteDataReader>
                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_11" Text="[logPrefix+Environment.NewLine + &quot;-- AcademicAdvisorID = &quot; &amp; AcademicAdvisorID &amp; Environment.NewLine + Environment.NewLine + &quot;---End Get Default Academic Advisor---&quot; + Environment.NewLine + Environment.NewLine]" />
                                        </Sequence>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                                            <Sequence DisplayName="Get Default Configuration Values from Si_Configurations" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_12" Text="[logPrefix+Environment.NewLine + Environment.NewLine + &quot;---Begin Get Default Configuration Values from Si_Configurations---&quot; + Environment.NewLine + Environment.NewLine]" />
                                              <ccwa:ExecuteDataReader CommandText="SELECT S.AdShiftID FROM si_Configurations SI (NoLock) JOIN adShift S (NoLock) ON SI.[Value] = S.Code WHERE [Key] = 'GetAutoEnroll_DefaultShift'" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_6">
                                                <ccwa:ExecuteDataReader.Body>
                                                  <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                    </ActivityAction.Argument>
                                                    <Assign DisplayName="Assign ShiftID_Config" sap2010:WorkflowViewState.IdRef="Assign_34">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">[ShiftID_Config]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("AdShiftID"),int32)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </ActivityAction>
                                                </ccwa:ExecuteDataReader.Body>
                                              </ccwa:ExecuteDataReader>
                                              <ccwa:ExecuteDataReader CommandText="SELECT Gl.AdGradeLevelID as UnderGradeLevelID_Config FROM si_Configurations SI (NoLock) JOIN AdGradeLevel GL (NoLock) ON SI.[Value] = GL.Code WHERE [Key] = 'GetAutoEnroll_DefaultUnderGradGradeLevelCode'" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_7">
                                                <ccwa:ExecuteDataReader.Body>
                                                  <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                    </ActivityAction.Argument>
                                                    <Assign DisplayName="Assign UnderGradeLevelID_Config" sap2010:WorkflowViewState.IdRef="Assign_35">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">[UnderGradeLevelID_Config]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("UnderGradeLevelID_Config"),int32)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </ActivityAction>
                                                </ccwa:ExecuteDataReader.Body>
                                              </ccwa:ExecuteDataReader>
                                              <ccwa:ExecuteDataReader CommandText="SELECT Gl.AdGradeLevelID as GradGradeLevelID_Config FROM si_Configurations SI (NoLock) JOIN AdGradeLevel GL (NoLock) ON SI.[Value] = GL.Code WHERE [Key] = 'GetAutoEnroll_DefaultGradudateGradeLevelCode'" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_8">
                                                <ccwa:ExecuteDataReader.Body>
                                                  <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                    </ActivityAction.Argument>
                                                    <Assign DisplayName="Assign GradGradeLevelID_Config" sap2010:WorkflowViewState.IdRef="Assign_36">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">[GradGradeLevelID_Config]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("GradGradeLevelID_Config"),int32)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </ActivityAction>
                                                </ccwa:ExecuteDataReader.Body>
                                              </ccwa:ExecuteDataReader>
                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_13" Text="[logPrefix+Environment.NewLine +&quot;-- ShiftID_Config = &quot; &amp; ShiftID_Config &amp; Environment.NewLine +&quot;-- UnderGradeLevelID = &quot; &amp; UnderGradeLevelID_Config &amp; Environment.NewLine + &quot; --GradGradeLevelID = &quot; &amp; GradGradeLevelID_Config &amp; Environment.NewLine + Environment.NewLine + &quot;---End Get Default Configuration Values from Si_Configurations---&quot; + Environment.NewLine + Environment.NewLine]" />
                                            </Sequence>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_19">
                                                <Sequence DisplayName="Assign missing values" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_92" Text="[logPrefix + &quot;Assign missing values sequence started..&quot;]" />
                                                  <If Condition="[EnrollmentPeriod.ShiftId.GetValueOrDefault(0) = 0]" DisplayName="If Shift is Null" sap2010:WorkflowViewState.IdRef="If_2">
                                                    <If.Then>
                                                      <Assign DisplayName="Assign shift from Config" sap2010:WorkflowViewState.IdRef="Assign_9">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Int32">[FinalShiftID]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Int32">[ShiftID_Config]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Assign DisplayName="Assign shift from App" sap2010:WorkflowViewState.IdRef="Assign_10">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Int32">[FinalShiftID]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Int32">[EnrollmentPeriod.ShiftId.Value]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Else>
                                                  </If>
                                                  <If Condition="[EnrollmentPeriod.GradeLevelId.GetValueOrDefault(0) = 0]" DisplayName="If GradeLevel is Null" sap2010:WorkflowViewState.IdRef="If_4">
                                                    <If.Then>
                                                      <If Condition="[Degree.GraduateLevel = &quot;0&quot;]" DisplayName="Determin Grad vs. Undergrad Default" sap2010:WorkflowViewState.IdRef="If_5">
                                                        <If.Then>
                                                          <Assign DisplayName="Assign Config Undegrade Level" sap2010:WorkflowViewState.IdRef="Assign_18">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[FinalGradeLevelID]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[UnderGradeLevelID_Config]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Then>
                                                        <If.Else>
                                                          <Assign DisplayName="Assign Config Graduate Level" sap2010:WorkflowViewState.IdRef="Assign_19">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[FinalGradeLevelID]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[GradGradeLevelID_Config]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Else>
                                                      </If>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Assign DisplayName="Assign Application Grade Level" sap2010:WorkflowViewState.IdRef="Assign_16">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Int32">[FinalGradeLevelID]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Int32">[EnrollmentPeriod.GradeLevelId.Value]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Else>
                                                  </If>
                                                  <If Condition="[EnrollmentPeriod.BillingMethodId.GetValueOrDefault(0) = 0]" DisplayName="If Billing Method is Null" sap2010:WorkflowViewState.IdRef="If_3">
                                                    <If.Then>
                                                      <Assign DisplayName="Assign Billingmethod on Program" sap2010:WorkflowViewState.IdRef="Assign_12">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Int32">[FinalBillingMethodID]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Int32">[ProgramVersion.BillingMethodId.Value]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Assign DisplayName="Assign Billingmethod on App" sap2010:WorkflowViewState.IdRef="Assign_13">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Int32">[FinalBillingMethodID]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Int32">[EnrollmentPeriod.BillingMethodId.Value]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Else>
                                                  </If>
                                                  <If Condition="[EnrollmentPeriod.ExpectedStartDate.HasValue = False OR EnrollmentPeriod.MidpointDate.HasValue = False OR EnrollmentPeriod.GraduationDate.HasValue = False]" DisplayName="If Dates are Null" sap2010:WorkflowViewState.IdRef="If_6">
                                                    <If.Then>
                                                      <ccwa:ExecuteDataReader CommandText="[&quot;SELECT StartDate, MidPoint, ExpGradDate FROM AdStartDate (Nolock) WHERE AdStartDateID = &quot; &amp; EnrollmentPeriod.StartDateId]" DisplayName="ExecuteDataReader - Get Dates from StartDateID" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_2">
                                                        <ccwa:ExecuteDataReader.Body>
                                                          <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Assign Variables Based on StartDateID" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                                              <Assign DisplayName="Assign FinalStartDate" sap2010:WorkflowViewState.IdRef="Assign_22">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="s:DateTime">[FinalStartDate]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="s:DateTime">[DirectCast(CurrentRow("StartDate"),Date)]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign DisplayName="Assign FinalMidPointDate" sap2010:WorkflowViewState.IdRef="Assign_23">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="s:DateTime">[FinalMidPointDate]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="s:DateTime">[DirectCast(CurrentRow("MidPoint"),Date)]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign DisplayName="Assign FinalGradDate" sap2010:WorkflowViewState.IdRef="Assign_24">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="s:DateTime">[FinalGradDate]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="s:DateTime">[DirectCast(CurrentRow("ExpGradDate"),Date)]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ccwa:ExecuteDataReader.Body>
                                                      </ccwa:ExecuteDataReader>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence DisplayName="Assign Variables based on App" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                                        <Assign DisplayName="Assign FinalStartDate" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:DateTime">[FinalStartDate]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:DateTime">[EnrollmentPeriod.ExpectedStartDate.Value]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign FinalMidPointDate" sap2010:WorkflowViewState.IdRef="Assign_26">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:DateTime">[FinalMidPointDate]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:DateTime">[EnrollmentPeriod.MidPointDate.Value]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Assign FinalGradDate" sap2010:WorkflowViewState.IdRef="Assign_27">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:DateTime">[FinalGradDate]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:DateTime">[EnrollmentPeriod.GraduationDate.Value]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                  <If Condition="[EnrollmentPeriod.EnrollmentDate.HasValue = False]" DisplayName="If EnrollmentDate is Null" sap2010:WorkflowViewState.IdRef="If_7">
                                                    <If.Then>
                                                      <Assign DisplayName="Assign EnrollmentDate to today" sap2010:WorkflowViewState.IdRef="Assign_28">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="s:DateTime">[FinalEnrollDate]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="s:DateTime">[Datetime.Today]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Assign DisplayName="Assign EnrollmentDate from App" sap2010:WorkflowViewState.IdRef="Assign_29">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="s:DateTime">[FinalEnrollDate]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="s:DateTime">[EnrollmentPeriod.EnrollmentDate.Value]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Else>
                                                  </If>
                                                  <If Condition="[EnrollmentPeriod.ApplicationReceivedDate.HasValue = False]" DisplayName="If ApplicationRecievedDate is Null" sap2010:WorkflowViewState.IdRef="If_8">
                                                    <If.Then>
                                                      <Assign DisplayName="Assign ApplicationRecievedDate to today" sap2010:WorkflowViewState.IdRef="Assign_30">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="s:DateTime">[FinalAplicationDate]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="s:DateTime">[Datetime.Today]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Assign DisplayName="Assign ApplicationRecievedDate from App" sap2010:WorkflowViewState.IdRef="Assign_31">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="s:DateTime">[FinalAplicationDate]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="s:DateTime">[EnrollmentPeriod.ApplicationReceivedDate.Value]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Else>
                                                  </If>
                                                  <Sequence DisplayName="Get and assign Catalog Year Sequence" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                                    <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_21" Level="Error" Text="[logPrefix+&quot;Get catalog year seq start&quot;]" />
                                                    <ccwae:GetEntity x:TypeArguments="cnae1:ApplicantEntity" EntityId="[entity.Id]" sap2010:WorkflowViewState.IdRef="GetEntity`1_6" Result="[applicantEntity]" />
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_51">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[getCatalogYear]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[string. Format("exec cst_sp_GetCatalogYear {0},{1}",EnrollmentPeriod.StartDateId,EnrollmentPeriod.ProgramVersionId)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_22" Level="Error" Text="[logPrefix+&quot;Get catalog year query: &quot;+getCatalogYear]" />
                                                    <ccwa:ExecuteDataReader CommandText="[getCatalogYear]" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_15">
                                                      <ccwa:ExecuteDataReader.Body>
                                                        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                          </ActivityAction.Argument>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_52">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[catalogyearId]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(CurrentRow("AdCatalogYearID"))]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </ActivityAction>
                                                      </ccwa:ExecuteDataReader.Body>
                                                    </ccwa:ExecuteDataReader>
                                                    <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_23" Level="Error" Text="[logPrefix+&quot;Catalog Year Id is: &quot;+catalogyearId.ToString()]" />
                                                    <If Condition="[catalogyearId=0]" sap2010:WorkflowViewState.IdRef="If_14">
                                                      <If.Then>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_53">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:Nullable(x:Int32)">[applicantEntity.CatalogYearId]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:Nullable(x:Int32)">[Nothing]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_54">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:Nullable(x:Int32)">[applicantEntity.CatalogYearId]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:Nullable(x:Int32)">[catalogyearId]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </If.Else>
                                                    </If>
                                                    <ccwae:SaveEntity x:TypeArguments="cnae1:ApplicantEntity" Entity="[applicantEntity]" sap2010:WorkflowViewState.IdRef="SaveEntity`1_1" ValidationMessages="[valMsg]" />
                                                    <If Condition="[Not valMsg.HasErrors]" sap2010:WorkflowViewState.IdRef="If_15">
                                                      <If.Then>
                                                        <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_24" Level="Error" Text="[logPrefix+&quot;Applicant entity saved successfully&quot;]" />
                                                      </If.Then>
                                                      <If.Else>
                                                        <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_25" Level="Error" Text="[logPrefix+&quot;Applicant entity not saved &quot;]" />
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                  <Sequence DisplayName="Get and Assign Ethnic group Sequence" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                                    <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_26" Level="Error" Text="[logPrefix+&quot;Get student entity and assign ethnic group seq start&quot;]" />
                                                    <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_27" Level="Error" Text="[logPrefix+&quot;Getting student entity&quot;]" />
                                                    <ccwae:GetEntity x:TypeArguments="cnce:StudentEntity" EntityId="[EnrollmentPeriod.StudentId]" sap2010:WorkflowViewState.IdRef="GetEntity`1_5" Result="[Student]" />
                                                    <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_28" Level="Error" Text="[logPrefix+&quot;student entity retrieved with Id: &quot;+Student.Id.ToString()]" />
                                                    <Sequence DisplayName="Getting Ethnic list from CRM Sequence" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_29" Level="Error" Text="[logPrefix+&quot;Getting ethnic list from CRM seq start&quot;]" />
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_55">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[getEthnicQuery]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[string. Format("Select EthId From viewtps_CRMEthnicGroup where studentid={0}",EnrollmentPeriod.StudentId)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_30" Level="Error" Text="[logPrefix+&quot;Getting ethnic list query: &quot;+getEthnicQuery]" />
                                                      <ccwa:ExecuteQuery CommandText="[getEthnicQuery]" ConnectionStringName="CRMConnection" Data="[dsEthnic]" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" />
                                                      <If Condition="[dsEthnic IsNot Nothing AndAlso dsEthnic.Tables(0) IsNot  Nothing AndAlso dsEthnic.Tables(0).Rows.Count&gt;0]" sap2010:WorkflowViewState.IdRef="If_16">
                                                        <If.Then>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_56">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="scg:List(x:Int32)">[lstEthnic]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="scg:List(x:Int32)">[new System.Collections.Generic.List(Of Integer)]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ForEach x:TypeArguments="sd:DataRow" DisplayName="ForEach&lt;DataRow&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[dsEthnic.Tables(0).AsEnumerable()]">
                                                              <ActivityAction x:TypeArguments="sd:DataRow">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
                                                                </ActivityAction.Argument>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_31" Level="Error" Text="[logPrefix+&quot;Ethnic Id found with Id : &quot;+ethnicId.ToString()]" />
                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">[ethnicId]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(item("EthId"))]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_32" Level="Error" Text="[logPrefix+&quot;Adding ethnic List to collecgtion : &quot;+ethnicId.ToString()]" />
                                                                  <AddToCollection x:TypeArguments="x:Int32" Collection="[lstEthnic]" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[ethnicId]" />
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ForEach>
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_33" Level="Error" Text="[logPrefix+&quot;No ethnic list found for the student&quot;]" />
                                                        </If.Else>
                                                      </If>
                                                      <If Condition="[dsEthnic.Tables(0).Rows.Count &gt; 0]" DisplayName="If ethnic group available " sap2010:WorkflowViewState.IdRef="If_17">
                                                        <If.Then>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_58">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="scg:IList(x:Int32)">[Student.EthnicitiesList]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="scg:IList(x:Int32)">[lstEthnic]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Then>
                                                      </If>
                                                      <ccwae:SaveEntity x:TypeArguments="cnce:StudentEntity" Entity="[Student]" sap2010:WorkflowViewState.IdRef="SaveEntity`1_2" ValidationMessages="[valMsg]" />
                                                      <If Condition="[Not valMsg.HasErrors]" sap2010:WorkflowViewState.IdRef="If_18">
                                                        <If.Then>
                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_34" Level="Trace" Text="[logPrefix+&quot;Student saved successfully with Id: &quot;+Student.Id.ToString()]" />
                                                        </If.Then>
                                                        <If.Else>
                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_35" Level="Trace" Text="[logPrefix+&quot;Student not saved&quot;]" />
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </Sequence>
                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_93" Text="[logPrefix + &quot;Assign missing values sequence completed..&quot;]" />
                                                </Sequence>
                                                <FlowStep.Next>
                                                  <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_15">
                                                    <Sequence DisplayName="Enroll Student" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="x:String" Name="adEnrollUpdateQuery" />
                                                      </Sequence.Variables>
                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_7" Text="[logPrefix+&quot;***** Begin Enroll Student sequence *****&quot; + Environment.NewLine + &quot;AdenrollID = &quot; &amp; EnrollmentPeriod.Id &amp; Environment.NewLine + &quot;CampusID = &quot; &amp; EnrollmentPeriod.CampusId &amp; Environment.NewLine + &quot;FinalSchoolStatusID = &quot; &amp; FinalSchoolStatusID &amp; Environment.NewLine + &quot;FinalAplicationDate = &quot; &amp; FinalAplicationDate &amp; Environment.NewLine + &quot;FinalStartDate = &quot; &amp; FinalStartDate &amp; Environment.NewLine + &quot;ProgramVersionID = &quot; &amp; EnrollmentPeriod.ProgramVersionId &amp; Environment.NewLine + &quot;FinalShiftID = &quot; &amp; FinalShiftID &amp; Environment.NewLine + &quot;FinalGradeLevelID = &quot; &amp; FinalGradeLevelID &amp; Environment.NewLine + &quot;FinalBillingMethodID = &quot; &amp; FinalBillingMethodID &amp; Environment.NewLine + &quot;FinalMidPointDate = &quot; &amp; FinalMidPointDate &amp; Environment.NewLine + &quot;FinalGraduationDate = &quot; &amp; FinalGradDate &amp; Environment.NewLine + &quot;AcademicAdvisorID = &quot; &amp; AcademicAdvisorID &amp; Environment.NewLine + &quot;StartDateID = &quot; &amp; EnrollmentPeriod.StartDateId &amp; Environment.NewLine + &quot;FinalEnrollDate = &quot; &amp; FinalEnrollDate &amp; Environment.NewLine]" />
                                                      <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                                        <TryCatch.Variables>
                                                          <Variable x:TypeArguments="x:String" Name="errStr" />
                                                        </TryCatch.Variables>
                                                        <TryCatch.Try>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                                                            <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_94" Text="[logPrefix + &quot;in TryCatch EnrollStudent sequence&quot;]" />
                                                            <ccwa:ExecuteNonQuery TotalRowsAffected="{x:Null}" CommandText="[&quot;Update Adenroll set CRMSuppressFlag = 0 Where AdenrollID = &quot; &amp; Entity.Id]" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_2" />
                                                            <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_15" Level="Trace" Text="[logPrefix+&quot;CRM Flag surpressed&quot;]" />
                                                            <cnaw:ConvertApplicantToEnrollment CatalogYearId="{x:Null}" StartTermId="{x:Null}" AcademicAdvisorId="[AcademicAdvisorID]" ApplicationReceivedDate="[FinalAplicationDate]" BillingMethodId="[FinalBillingMethodID]" CampusId="[EnrollmentPeriod.CampusId]" EnrollDate="[Date.Today]" EnrollId="[EnrollmentPeriod.Id]" ExpectedStartDate="[FinalStartDate]" GradeLevelId="[FinalGradeLevelID]" GraduationDate="[FinalGradDate]" sap2010:WorkflowViewState.IdRef="ConvertApplicantToEnrollment_5" MidpointDate="[FinalMidPointDate]" ProgramVersionId="[EnrollmentPeriod.ProgramVersionId.Value]" ShiftId="[FinalShiftID]" StartDateId="[EnrollmentPeriod.StartDateId.Value]" StudentId="[EnrollmentPeriod.StudentID]" StudentStatusId="[FinalSchoolStatusID]" ValidationMessages="[validationMessages]" />
                                                            <If Condition="[string.IsNullOrEmpty(Student.State)]" sap2010:WorkflowViewState.IdRef="If_19">
                                                              <If.Else>
                                                                <ccwa:ExecuteNonQuery TotalRowsAffected="{x:Null}" CommandText="[string.Format(&quot;Update Adenroll set  IPEDSState='{0}' Where AdenrollID = {1}&quot;, Student.State, Entity.Id)]" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_6" />
                                                              </If.Else>
                                                            </If>
                                                            <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_36" Level="Trace" Text="[logPrefix+&quot;IPEDSState Updated to Student State&quot;]" />
                                                            <ccwa:ExecuteDataReader CommandText="[&quot;Select Convert(Int,Applicant) as isApplicant from Adenroll (NOLOCK) WHERE AdenrollID = &quot; &amp; Entity.Id]" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_13">
                                                              <ccwa:ExecuteDataReader.Body>
                                                                <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                                  </ActivityAction.Argument>
                                                                  <Assign DisplayName="Assign isApplicant" sap2010:WorkflowViewState.IdRef="Assign_49">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">[isApplicant]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("isApplicant"),int32)]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </ActivityAction>
                                                              </ccwa:ExecuteDataReader.Body>
                                                            </ccwa:ExecuteDataReader>
                                                            <ccwa:ExecuteDataReader CommandText="SELECT [Value] as EmailErrors FROM si_Configurations SI (NoLock) WHERE [Key] = 'GetAutoEnroll_EmailErrors'" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_12">
                                                              <ccwa:ExecuteDataReader.Body>
                                                                <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                                  </ActivityAction.Argument>
                                                                  <Assign DisplayName="Assign ErrorsEmail_Config" sap2010:WorkflowViewState.IdRef="Assign_44">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[ErrorsEmail_Config]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">[DirectCast(CurrentRow("EmailErrors"),string)]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </ActivityAction>
                                                              </ccwa:ExecuteDataReader.Body>
                                                            </ccwa:ExecuteDataReader>
                                                            <If Condition="[validationMessages.HasErrors]" sap2010:WorkflowViewState.IdRef="If_10">
                                                              <If.Then>
                                                                <Sequence DisplayName="Fail" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                                                  <ForEach x:TypeArguments="cce:ValidationMessage" DisplayName="ForEach&lt;ValidationMessage&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[validationMessages]">
                                                                    <ActivityAction x:TypeArguments="cce:ValidationMessage">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="cce:ValidationMessage" Name="item" />
                                                                      </ActivityAction.Argument>
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_45">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[errStr]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[string.Format("{0} {1} {2} {3}", errStr, Environment.NewLine, item.Message, Environment.NewLine)]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </ActivityAction>
                                                                  </ForEach>
                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_96" Text="[logPrefix+errStr]" />
                                                                  <ccwa:SendMail IsBodyHtml="{x:Null}" Body="[Environment.NewLine +&quot;---End Enrolling Student---&quot; + Environment.NewLine + &quot;StudentNumber = &quot; &amp; Student.StudentNumber &amp; Environment.NewLine + &quot;AdenrollID = &quot; &amp; EnrollmentPeriod.Id &amp; Environment.NewLine + &quot;CampusID = &quot; &amp; EnrollmentPeriod.CampusId &amp; Environment.NewLine + &quot;FinalSchoolStatusID = &quot; &amp; FinalSchoolStatusID &amp; Environment.NewLine + &quot;FinalAplicationDate = &quot; &amp; FinalAplicationDate &amp; Environment.NewLine + &quot;FinalStartDate = &quot; &amp; FinalStartDate &amp; Environment.NewLine + &quot;ProgramVersionID = &quot; &amp; EnrollmentPeriod.ProgramVersionId &amp; Environment.NewLine + &quot;FinalShiftID = &quot; &amp; FinalShiftID &amp; Environment.NewLine + &quot;FinalGradeLevelID = &quot; &amp; FinalGradeLevelID &amp; Environment.NewLine + &quot;FinalBillingMethodID = &quot; &amp; FinalBillingMethodID &amp; Environment.NewLine + &quot;FinalMidPointDate = &quot; &amp; FinalMidPointDate &amp; Environment.NewLine + &quot;FinalGraduationDate = &quot; &amp; FinalGradDate &amp; Environment.NewLine + &quot;AcademicAdvisorID = &quot; &amp; AcademicAdvisorID &amp; Environment.NewLine + &quot;StartDateID = &quot; &amp; EnrollmentPeriod.StartDateId &amp; Environment.NewLine + &quot;FinalEnrollDate = &quot; &amp; FinalEnrollDate &amp; Environment.NewLine + &quot;Error Message = &quot; &amp; errStr]" From="[Email_From]" sap2010:WorkflowViewState.IdRef="SendMail_2" Subject="[&quot;AutoEnrollment Failure - Student: &quot; + Student.StudentNumber]" To="[ErrorsEmail_Config]" />
                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_46">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[Reason]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">["Auto Enrollment Failed. ConvertApplicantToEnrollment Error: " + errStr]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Success" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_97" Text="[logPrefix+&quot;No validation Errors&quot;]" />
                                                                  <ccwa:ExecuteNonQuery TotalRowsAffected="{x:Null}" CommandText="[&quot;Update Adenroll set CRMSuppressFlag = 1 Where AdenrollID = &quot; &amp; Entity.Id]" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_3" />
                                                                  <ccwa:ExecuteNonQuery TotalRowsAffected="{x:Null}" CommandText="[&quot;exec dbo.proc_AdAddCourses_Update '&lt;xml&gt;&lt;record AdEnrollID=&quot;&quot;&quot; &amp;entity.Id &amp; &quot;&quot;&quot; /&gt;&lt;/xml&gt;' ,34,1&quot;]" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1" />
                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[Reason]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">Auto Enrollment Successful</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                          </Sequence>
                                                        </TryCatch.Try>
                                                        <TryCatch.Catches>
                                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                              </ActivityAction.Argument>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                                                                <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_14" Level="Error" Text="[logPrefix+Environment.NewLine +&quot;---End Enrolling Student---&quot; + Environment.NewLine + &quot;StudentID = &quot; &amp; EnrollmentPeriod.StudentID &amp; Environment.NewLine + &quot;AdenrollID = &quot; &amp; EnrollmentPeriod.Id &amp; Environment.NewLine + &quot;CampusID = &quot; &amp; EnrollmentPeriod.CampusId &amp; Environment.NewLine + &quot;FinalSchoolStatusID = &quot; &amp; FinalSchoolStatusID &amp; Environment.NewLine + &quot;FinalAplicationDate = &quot; &amp; FinalAplicationDate &amp; Environment.NewLine + &quot;FinalStartDate = &quot; &amp; FinalStartDate &amp; Environment.NewLine + &quot;ProgramVersionID = &quot; &amp; EnrollmentPeriod.ProgramVersionId &amp; Environment.NewLine + &quot;FinalShiftID = &quot; &amp; FinalShiftID &amp; Environment.NewLine + &quot;FinalGradeLevelID = &quot; &amp; FinalGradeLevelID &amp; Environment.NewLine + &quot;FinalBillingMethodID = &quot; &amp; FinalBillingMethodID &amp; Environment.NewLine + &quot;FinalMidPointDate = &quot; &amp; FinalMidPointDate &amp; Environment.NewLine + &quot;FinalGraduationDate = &quot; &amp; FinalGradDate &amp; Environment.NewLine + &quot;AcademicAdvisorID = &quot; &amp; AcademicAdvisorID &amp; Environment.NewLine + &quot;StartDateID = &quot; &amp; EnrollmentPeriod.StartDateId &amp; Environment.NewLine + &quot;FinalEnrollDate = &quot; &amp; FinalEnrollDate &amp; Environment.NewLine + &quot;Error Message = &quot; &amp; exception.Message &amp; Environment.NewLine + &quot;StackTrace = &quot; &amp; exception.StackTrace &amp; Environment.NewLine]" />
                                                                <ccwa:SendMail IsBodyHtml="{x:Null}" Body="[Environment.NewLine +&quot;---End Enrolling Student---&quot; + Environment.NewLine + &quot;StudentID = &quot; &amp; EnrollmentPeriod.StudentID &amp; Environment.NewLine + &quot;AdenrollID = &quot; &amp; EnrollmentPeriod.Id &amp; Environment.NewLine + &quot;CampusID = &quot; &amp; EnrollmentPeriod.CampusId &amp; Environment.NewLine + &quot;FinalSchoolStatusID = &quot; &amp; FinalSchoolStatusID &amp; Environment.NewLine + &quot;FinalAplicationDate = &quot; &amp; FinalAplicationDate &amp; Environment.NewLine + &quot;FinalStartDate = &quot; &amp; FinalStartDate &amp; Environment.NewLine + &quot;ProgramVersionID = &quot; &amp; EnrollmentPeriod.ProgramVersionId &amp; Environment.NewLine + &quot;FinalShiftID = &quot; &amp; FinalShiftID &amp; Environment.NewLine + &quot;FinalGradeLevelID = &quot; &amp; FinalGradeLevelID &amp; Environment.NewLine + &quot;FinalBillingMethodID = &quot; &amp; FinalBillingMethodID &amp; Environment.NewLine + &quot;FinalMidPointDate = &quot; &amp; FinalMidPointDate &amp; Environment.NewLine + &quot;FinalGraduationDate = &quot; &amp; FinalGradDate &amp; Environment.NewLine + &quot;AcademicAdvisorID = &quot; &amp; AcademicAdvisorID &amp; Environment.NewLine + &quot;StartDateID = &quot; &amp; EnrollmentPeriod.StartDateId &amp; Environment.NewLine + &quot;FinalEnrollDate = &quot; &amp; FinalEnrollDate &amp; Environment.NewLine + &quot;Error Message = &quot; &amp; exception.Message &amp; Environment.NewLine + &quot;StackTrace = &quot; &amp; exception.StackTrace &amp; Environment.NewLine]" From="[Email_From]" sap2010:WorkflowViewState.IdRef="SendMail_1" Subject="[&quot;AutoEnrollment Failure - SystemException - Student: &quot; + Student.StudentNumber]" To="[ErrorsEmail_Config]" />
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_43">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[Reason]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">Auto Enrollment Failed</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </ActivityAction>
                                                          </Catch>
                                                        </TryCatch.Catches>
                                                      </TryCatch>
                                                      <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_95" Text="[logPrefix + &quot;Enroll Student sequence completed&quot;]" />
                                                    </Sequence>
                                                    <FlowStep.Next>
                                                      <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_23">
                                                        <Sequence DisplayName="Get CRM Lead Entity" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_16" Text="[logPrefix+&quot; Get CRM Lead Entity  ****Begin Get CRM Lead Id****---&quot;]" />
                                                          <ccwa:ExecuteDataReader CommandText="[&quot;select convert(Int,CRMID) as LeadID from dbo.adapplicationexternalmap (nolock) where adenrollid = &quot; &amp; entity.Id]" DisplayName="ExecuteDataReader - Get LeadID from CRM" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_14">
                                                            <ccwa:ExecuteDataReader.Body>
                                                              <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                                                </ActivityAction.Argument>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                                                                  <Assign DisplayName="Assign LeadID" sap2010:WorkflowViewState.IdRef="Assign_50">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">[LeadID]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("LeadID"),int32)]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_17" Text="[logPrefix+&quot; Get CRM Lead Entity ****LeadID = &quot; &amp; LeadID.ToString]" />
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ccwa:ExecuteDataReader.Body>
                                                          </ccwa:ExecuteDataReader>
                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_18" Text="[logPrefix+&quot; *** End Get CRM Lead Entity Sequence &quot;]" />
                                                        </Sequence>
                                                        <FlowStep.Next>
                                                          <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_22">
                                                            <Sequence DisplayName="Update CRM Status" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_19" Text="[logPrefix+&quot;**** Begin Update CRM Status, LeadID :  &quot; &amp; LeadID.ToString + &quot;isApplicant : &quot; &amp; isApplicant.ToString]" />
                                                              <If Condition="[LeadID&gt;0]" sap2010:WorkflowViewState.IdRef="If_13">
                                                                <If.Then>
                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
                                                                    <If Condition="[isapplicant=0]" sap2010:WorkflowViewState.IdRef="If_12">
                                                                      <If.Then>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_45" Text="[logPrefix + &quot;exec [dbo].SprocTPS_UpdateCRMStatus 3,1,&quot;+LeadID.ToString]" />
                                                                          <ccwa:ExecuteNonQuery TotalRowsAffected="{x:Null}" CommandText="[&quot;exec [dbo].SprocTPS_UpdateCRMStatus 3,1,&quot; &amp; LeadID]" ConnectionStringName="CRMConnection" DisplayName="Update CNS Promotion Status" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_4" />
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                                          <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_46" Text="[logPrefix + &quot;exec [dbo].SprocTPS_UpdateCRMStatus 3,0,&quot; +LeadID.ToString]" />
                                                                          <ccwa:ExecuteNonQuery TotalRowsAffected="{x:Null}" CommandText="[&quot;exec [dbo].SprocTPS_UpdateCRMStatus 3,0,&quot; &amp; LeadID]" ConnectionStringName="CRMConnection" DisplayName="Update CNS Promotion Status" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_5" />
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                  </Sequence>
                                                                </If.Then>
                                                                <If.Else>
                                                                  <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_47" Level="Error" Text="[logPrefix + &quot; skipping CRM Update Status as LeadID &quot; &amp; LeadID.ToString]" />
                                                                </If.Else>
                                                              </If>
                                                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_20" Text="[logPrefix+&quot;Update CRM Status Complete****End Update CRM Status&quot;]" />
                                                            </Sequence>
                                                            <FlowStep.Next>
                                                              <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                                                                <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_2" Level="Trace" Text="[logPrefix+ &quot;*****END AUTO ENROLLMENT WORKFLOW - &quot; &amp; reason &amp; &quot;*****&quot;]" />
                                                                <FlowStep.Next>
                                                                  <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                                                                    <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="[reason]" />
                                                                  </FlowStep>
                                                                </FlowStep.Next>
                                                              </FlowStep>
                                                            </FlowStep.Next>
                                                          </FlowStep>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </FlowStep.Next>
                                                  </FlowStep>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_30">
                            <Sequence DisplayName="Get NDS Enroll Final School Status " sap2010:WorkflowViewState.IdRef="Sequence_42">
                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_66" Text="[logPrefix+ &quot;---Begin NDSEnroll  Final School Status ---&quot; + Environment.NewLine]" />
                              <ccwa:ExecuteDataReader CommandText="SELECT SS.SySchoolStatusID as NDSEnrollmentSchoolStatusID_Config FROM si_Configurations SI (NoLock) JOIN SySchoolStatus SS (NoLock) ON SI.[Value] = SS.Code WHERE [Key] = 'GetAutoEnroll_NDSEnrollmentStatusCode'" DisplayName="ExecuteDataReader NDSEnrollmentSchoolStatusID_Config" sap2010:WorkflowViewState.IdRef="ExecuteDataReader_25">
                                <ccwa:ExecuteDataReader.Body>
                                  <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="CurrentRow" />
                                    </ActivityAction.Argument>
                                    <Assign DisplayName="Assign NDSEnrollmentSchoolStatusID_Config" sap2010:WorkflowViewState.IdRef="Assign_81">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[FinalSchoolStatusID]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[DirectCast(CurrentRow("NDSEnrollmentSchoolStatusID_Config"),int32)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </ActivityAction>
                                </ccwa:ExecuteDataReader.Body>
                              </ccwa:ExecuteDataReader>
                              <ccwa:LogLine sap2010:WorkflowViewState.IdRef="LogLine_67" Text="[logPrefix+&quot;******* END NDSEnroll Final School Status : Final School Status &quot; &amp;  FinalSchoolStatusID.ToString + Environment.NewLine]" />
                            </Sequence>
                            <FlowStep.Next>
                              <x:Reference>__ReferenceID0</x:Reference>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <x:Reference>__ReferenceID1</x:Reference>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <x:Reference>__ReferenceID14</x:Reference>
    <x:Reference>__ReferenceID15</x:Reference>
    <x:Reference>__ReferenceID16</x:Reference>
    <sads:DebugSymbol.Symbol>d40BXFxDbGllbnRcQyRcVXNlcnNca2Vza2lsbGFcc291cmNlXGdpdFxXb3JrZmxvd3NcQXV0b0Vucm9sbG1lbnRcQ21jLk5leHVzLlNpcy5BY2FkZW1pY3MuU3R1ZGVudEVucm9sbG1lbnRQZXJpb2RfU2F2ZWRFdmVudF9BdXRvRW5yb2xsbWVudC54YW1stQNfA90HDwIBAWE0YWgCAQZzS3NuAgEFdDR0UAIBBHpLeoABAgEDgAE0gAE9AgECiQEJsQEUAwGlBLMBO7MBqwIDAaQEiAdBiAf1AQMBoASLB0WLB6IBAwGdBLYBEbYBqgEDAZkEuQEVuQHTAQMBlQS7AUi7AWoDAZQEpAcduAcoAwGJBLACKcQCNAMB/gPHAi39AjgDAecDgAMxzQU8AwGFAtAFNc4GQAMBkwHRBjnoBkQDAYEB6wY9hQdIAgFbvgEdvgHBAQIBV8EBIccBLAIBQcoBJa0CMAIBB4oBC4oBeQMBxwSLAQuSARQDAcMEkwELkwGRAQMBwASUAQuoARYDAbEEqQELsAEQAwGmBIgHjgGIB/IBAwGhBIsHlQGLB58BAwGeBLYBULYBZAMBnAS2AZwBtgGnAQMBmgS5AVu5AYYBAwGYBLkBvgG5AdABAwGWBKUHH6UHvgEDAZIEpgcftgc4AwGMBLcHH7cH9gEDAYoEsQIrsQKIAgMBhwSyAivCAkQDAYEEwwIrwwLeAgMB/wPIAi/IAqcCAwH8A8kCL9kCSAMB9gPaAi/qAkgDAfAD6wIv+wJIAwHqA/wCL/wCsQQDAegDgQMzgQO6AQMB5AOCAzOXAzgDAdkDmAMzuwM4AwHHA7wDM9EDOAMBvQPSAzOUBDgDAZwDlQQzqgQ4AwGSA6sEM8AEOAMBiAPBBDP+BD4DAdcC/wQzywU+AwGJAswFM8wFvAEDAYYC1AU31AX+CgMBgwLVBTfMBkIDAZcBzQY3zQa3AQMBlAHSBjvSBs4BAwGQAdMGO+YGVAMBhQHnBjvnBr4BAwGCAewGP+wGkgICAXztBj+DB0QCAV+EBz+EB88BAgFcvgFbvgF8AgFavgG0Ab4BvgECAVjCASPCAaEBAgFUwwEjwwGbAgIBT8QBI8QBrAICAUrFASPFAaMCAgFFxgEjxgGhAQIBQs4BJ84BgwICAT/PASfjATICATbkASeIAiwCAR+JAierAjICAQqsAiesAtIDAgEIigFoigF2AwHIBI0BN40BQgMBxASTAUuTAY4BAwHBBJUBDZUBjAEDAb0ElgENpgEmAwG2BKcBDacByQEDAbIEqQEZqQFCAwGnBKsBD6sBugEDAa0ErgEPrgHOAQMBqQSlB1+lB7sBAwGTBKYHQ6YHlgIDAZEErAclswcuAwGNBLcHX7cH8wEDAYsEsQJrsQKFAgMBiASyAk+yArQCAwGGBLgCMb8COgMBggTDAmvDAtsCAwGABMgCb8gCpAIDAf0DyQJTyQLkAQMB+wPPAjXWAj4DAfcD2gJT2gKfAgMB9QPgAjXnAj4DAfED6wJT6wKeAgMB7wPxAjX4Aj4DAesD/AJv/AKuBAMB6QOBA3OBA7cBAwHlA4IDQYIDdgMB2gOEAzeLA0ADAd8DjgM3lQNAAwHbA5gDQZgDewMByAOaAzevAzwDAc0DsgM3uQNAAwHJA7wDQbwDfgMBvgO+AzfFA0ADAcMDyAM3zwNAAwG/A9IDQdID3gEDAZ0D1AM39gNQAwGrA/kDN5IEQgMBngOVBEGVBHUDAZMDlwQ3ngRAAwGYA6EEN6gEQAMBlAOrBEGrBH4DAYkDrQQ3tARAAwGOA7cEN74EQAMBigPCBDXCBLoBAwGFA8MENcME0gEDAYEDxAQ1ywQ+AwH9AswENcwExwEDAfkCzQQ13QROAwHyAt4ENd4EzQEDAe4C3wQ19AQ6AwHkAvUENfUE2wEDAeAC9gQ1/QQ6AwHYAoAFNYAF1AEDAdQCgQU1gQW2AQMB0QKCBTWCBdgBAwHNAoMFNYMF2AEDAcsChAU1ygVAAwGKAswFc8wFuQEDAYcC1AV21AX7CgMBhALaBTu1BkYDAaYBvQY/yAZKAwGYAc0Gd80GtAEDAZUB0gZ70gbLAQMBkQHTBl/TBuEBAwGPAdkGQeMGTAMBhgHnBnvnBrsBAwGDAewGf+wGjwICAX3tBk3tBlwCAWDvBkP+Bk4CAWaBB0OBB+wBAgFihAd/hAfMAQIBXcIBY8IBngECAVXDAc8BwwHiAQIBUsMB9QHDAZgCAgFRwwG7AcMBwAECAVDEAdUBxAHxAQIBTcQBhALEAakCAgFMxAHDAcQBxgECAUvFAZUBxQGrAQIBScUBtgHFAcYBAgFHxQGMAsUBoAICAUbGAWPGAZ4BAgFDzgFnzgGAAgIBQNABKeIBQgIBN+QBNeQBUQIBIOYBK4MCNgIBJIYCK4YCoQECASGKAimKAsMBAgEdiwIpqQIuAgENqgIpqgKMAgIBC6wCZ6wCzwMCAQmVAU2VAYkBAwG+BJYBMZYBnwEDAbwEnAETowEcAwG3BKcBTacBxgEDAbMEqwFeqwFrAwGwBKsBowGrAbcBAwGuBK4BT64BywEDAaoEsQdPsQeTAQMBkASuB1CuB2UDAY4EvQJbvQKHAQMBhQS6Aly6Am8DAYME1AJf1AKKAQMB+gPRAmDRAnADAfgD5QJf5QKZAQMB9APiAmDiAnoDAfID9gJf9gKYAQMB7gPzAmDzAnkDAewDiQNhiQNxAwHiA4YDYoYDcAMB4AOTA2GTA4EBAwHeA5ADYpADcAMB3AOaA0WaA20DAc4DnAM7owNEAwHUA6YDO60DRAMBzwO3A2G3A4YBAwHMA7QDYrQDdQMBygPDA2HDA4cBAwHGA8ADYsADeAMBxAPNA2HNA4kBAwHCA8oDYsoDeAMBwAPUA1vUA+YBAwG8A9oDPfMDSAMBrAP6AzmBBEIDAacDggQ5iQRCAwGjA4oEOZEEQgMBnwOcBGScBHQDAZsDmQRlmQR2AwGZA6YEZKYEiwEDAZcDowRlowR2AwGVA7IEZLIEdAMBkQOvBGWvBHoDAY8DvARkvASUAQMBjQO5BGW5BHoDAYsDwgSDAcIEtwEDAYYDwwR3wwSEAQMBhAPDBLwBwwTPAQMBggPJBGDJBNUBAwGAA8YEYcYEcQMB/gLMBIMBzATEAQMB+gLNBFnNBGsDAfcC0wQ72gREAwHzAt4EgwHeBMoBAwHvAt8EQ98EVgMB5QLhBDnoBEIDAesC6wQ58gRCAwHnAvUEdvUEiQEDAeIC9QTOAfUE2AEDAeEC9gRD9gRbAwHZAvgEOfgExwEDAd0C+wQ5+wS/AQMB2gKABYMBgAXRAQMB1QKBBYMBgQWzAQMB0gKCBXSCBZIBAwHQAoIFygGCBdUBAwHOAoMFgwGDBdUBAwHMAoUFN4UFyAEDAcgChgU3jQVAAwHEAo4FN44FzAEDAcACjwU3jwXTAQMBugKQBTe0BTwDAZwCtQU3wAU8AwGWAsEFN8EF0gEDAZICwgU3yQU8AwGLAtsFPdsFvgEDAYAC3AU93AWOAgMB/gHdBT3dBbsBAwH7Ad4FPd4FxgYDAeAB3wU94wVCAwHcAeQFPeQFywEDAdkB5QU99QVWAwHTAfYFPYYGVgMBzAGHBj20BkIDAacBvgZBvgaWDQMBpAG/BkG/BqgOAwGdAcAGQccGSgMBmQHaBkPhBkwDAYsB4gZD4gbYAQMBhwHwBkX9BkoCAWeBB5EBgQfpAQIBY9ABTdABqQYCAT7WAS/fAToCATjnAS2BAjcCASiCAi2CAq4BAgElhgJrhgKeAQIBIooCaYoCwAECAR6LAjeLAkYCAQ6NAi2dAkYCARWgAi2nAjYCARCqAmmqAokCAgEMoQE+oQFzAwG6BJ4BP54BUwMBuAShA2WhA38DAdcDngNmngN5AwHVA6sDZasDfgMB0gOoA2aoA3kDAdAD2wM/4gNIAwG3A+MDP+oDSAMBsgPrAz/yA0gDAa0D/wNm/wOQAQMBqgP8A2f8A3cDAagDhwRmhwSLAQMBpgOEBGeEBHoDAaQDjwRmjwSNAQMBogOMBGeMBHYDAaAD2ARl2ASVAQMB9gLVBGbVBHUDAfQC5gRv5gR4AwHtAuMEcOMEjwEDAewC8ARv8AR+AwHpAu0EcO0EjwEDAegC+ASHAfgExAEDAd4C+wSHAfsEvAEDAdsChQWFAYUFxQEDAckCiwViiwXNAQMBxwKIBWOIBXMDAcUCjgWFAY4FyQEDAcECjwVWjwVoAwG+Ao8FkwGPBZ8BAwG8Ao8Ffo8FjQEDAbsCkAVFkAW0AQMBnQKSBTuvBUYDAaECsgU7sgXKAQMBngK1BUW1BW0DAZcCtwU7vgVEAwGYAsEFdcEFgAEDAZQCwQXFAcEFzwEDAZMCwgVFwgVdAwGMAsQFO8QF4AEDAZACxwU7xwW3AQMBjQLbBX3bBbsBAwGBAtwFfNwF1wEDAf8B3QWLAd0FuAEDAfwB3gXKA94F2wMDAfkB3gWiAd4FtwEDAfcB3gWlA94FugMDAfUB3gX4Ad4FkAIDAfMB3gXRBN4F/AQDAfIB3gXDAt4F0QIDAfEB3gWCBt4FmQYDAe8B3gXQAd4F5wEDAe0B3gWtBt4FwwYDAesB3gXbAt4F8gIDAeoB3gWiBd4FyAUDAekB3gWFA94FlwMDAecB3gXTBd4F8QUDAeYB3gWFBd4FlQUDAeQB3gWqBN4FvwQDAeIB3gWaAt4FtwIDAeEB3wVL3wVyAwHdAeEFQeEFrAIDAd4B5AWLAeQFyAEDAdoB5QVh5QXYAQMB2AHrBUPyBUwDAdQB9gVh9gXNAQMB0gH8BUODBkwDAc0BhwZLhwZrAwGoAYkGQaMGTAMBtQGmBkGyBkwDAakBvgaPAb4Gkw0DAaUBvwaPDr8GpQ4DAaIBvwZrvwblDAMBoQG/Bq8NvwaLDgMBoAG/BusMvwb5DAMBngHFBmzFBoIBAwGcAcIGbcIGdQMBmgHfBm3fBpUBAwGOAdwGbtwGdgMBjAHiBoMB4gbVAQMBiAHwBlPwBmQCAWjyBkn1BlQCAXP4Bkn7BlQCAWrXATHeAToCATnnAb4B5wHOAQIBNewBMf8BPAIBKYICbYICqwECASaNAlGNAoICAgEbkwIzmgI8AgEWpQJXpQJuAgETogJYogJtAgER4ANs4AOWAQMBugPdA23dA30DAbgD6ANs6AOVAQMBtQPlA23lA4ABAwGzA/ADbPADmAEDAbAD7QNt7QN8AwGuA5MFPZoFRgMBtgKbBT2uBUcDAaICsgWJAbIFxwEDAZ8CvAVwvAV7AwGaArkFcbkFigEDAZkCxAWJAcQF3QEDAZECxwWJAccFtAEDAY4C4QWAAeEF9QEDAd8B8AVt8AWaAQMB1wHtBW7tBXsDAdUBgQZugQacAQMB0AH+BW/+BYMBAwHOAYoGQ5gGTQMBxgGZBkOZBpoBAwHCAZoGQ5oGoQ0DAbsBmwZDogZMAwG2AacGQ6cGtAEDAbIBqAZDqAaUAgMBsAGpBkOpBuACAwGuAaoGQ7EGTAMBqgHzBkvzBuIBAgF49AZL9AbVAgIBdPkGS/kG4wECAW/6Bkv6BtUCAgFr3AFb3AGUAQIBPNkBXNkBcwIBOu0BM/4BOAIBKpgCXZgClAECARmVAl6VAnMCAReYBXGYBaIBAwG5ApUFcpUFfQMBtwKbBb0BmwXiAQMBtQKgBUGsBUwDAaMCigbYAYoG7gEDAcsBjwZHlgZQAwHHAZkGgwGZBpcBAwHDAZoGiA2aBp4NAwHAAZoGbZoG8AsDAb8Bmga6DJoGhA0DAb4Bmgb2C5oGhAwDAbwBoAZuoAa3AQMBuQGdBm+dBncDAbcBpwaDAacGsQEDAbMBqAaCAagG3QEDAbEBqQaCAakGqQIDAa8BrwZurwaIAQMBrQGsBm+sBncDAasB8waLAfMG3wECAXn0BooB9AbPAQIBdvQG5QH0BvQBAgF1+QaLAfkG4AECAXD6BooB+gbPAQIBbfoG5QH6BvQBAgFs7QFB7QF2AgEr7wE3+QFCAgEu/AE3/AHhAQIBLKEFQ6EF3AEDAbECogVDqQVMAwGtAqoFQ6oF5gEDAakCqwVDqwXRAQMBpAKUBnKUBtQBAwHKAZEGc5EGewMByAHwATn3AUICATH4ATn4AYsCAgEv/AF3/AHeAQIBLaEFkQGhBdkBAwGyAqcFbacFjQEDAbACpAVupAV4AwGuAqoFkQGqBeMBAwGqAqsFeasFhgEDAacCqwXCAasFzgEDAaUC9QFl9QFpAgE08gFm8gFzAgEy+AF5+AGIAgIBMA==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetWorkflowInstanceId_3" sap:VirtualizedContainerService.HintSize="468,22" />
      <sap2010:ViewStateData Id="Assign_79" sap:VirtualizedContainerService.HintSize="468,60" />
      <sap2010:ViewStateData Id="LogLine_61" sap:VirtualizedContainerService.HintSize="468,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_62" sap:VirtualizedContainerService.HintSize="446,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_80" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ExecuteDataReader_24" sap:VirtualizedContainerService.HintSize="446,312" />
      <sap2010:ViewStateData Id="LogLine_63" sap:VirtualizedContainerService.HintSize="446,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="468,738">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetEntity`1_7" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_82" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="If_27" sap:VirtualizedContainerService.HintSize="468,259" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetEntity`1_2" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetEntity`1_3" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetEntity`1_8" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_64" sap:VirtualizedContainerService.HintSize="314,111" />
      <sap2010:ViewStateData Id="LookupReferenceItem_5" sap:VirtualizedContainerService.HintSize="314,177" />
      <sap2010:ViewStateData Id="LookupReferenceItem_6" sap:VirtualizedContainerService.HintSize="314,177" />
      <sap2010:ViewStateData Id="LookupStudentDocuments_3" sap:VirtualizedContainerService.HintSize="314,114" />
      <sap2010:ViewStateData Id="LogLine_65" sap:VirtualizedContainerService.HintSize="314,111" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_68" sap:VirtualizedContainerService.HintSize="214,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_97" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_52" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_33" sap:VirtualizedContainerService.HintSize="3864,386">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_53" sap:VirtualizedContainerService.HintSize="3886,510">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_83" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_69" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_70" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="If_24" sap:VirtualizedContainerService.HintSize="503,483">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_44" sap:VirtualizedContainerService.HintSize="525,607">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="287,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_81" sap:VirtualizedContainerService.HintSize="287,111" />
      <sap2010:ViewStateData Id="Sequence_45" sap:VirtualizedContainerService.HintSize="309,483">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_72" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="If_25" sap:VirtualizedContainerService.HintSize="214,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_84" sap:VirtualizedContainerService.HintSize="467,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_116" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ExecuteDataReader_49" sap:VirtualizedContainerService.HintSize="915,312">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_117" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_34" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="LogLine_85" sap:VirtualizedContainerService.HintSize="467,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_57" sap:VirtualizedContainerService.HintSize="214,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_77" sap:VirtualizedContainerService.HintSize="214,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_10" sap:VirtualizedContainerService.HintSize="1274,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ExecuteDataReader_1" sap:VirtualizedContainerService.HintSize="1274,312" />
      <sap2010:ViewStateData Id="LogLine_11" sap:VirtualizedContainerService.HintSize="1274,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_12" sap:VirtualizedContainerService.HintSize="1189,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ExecuteDataReader_6" sap:VirtualizedContainerService.HintSize="1189,312" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ExecuteDataReader_7" sap:VirtualizedContainerService.HintSize="1189,312" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ExecuteDataReader_8" sap:VirtualizedContainerService.HintSize="1189,312" />
      <sap2010:ViewStateData Id="LogLine_13" sap:VirtualizedContainerService.HintSize="1189,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_92" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="214,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="214,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="214,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="264,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_2" sap:VirtualizedContainerService.HintSize="709,586" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="264,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="214,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="214,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="214,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_21" sap:VirtualizedContainerService.HintSize="509,111" />
      <sap2010:ViewStateData Id="GetEntity`1_6" sap:VirtualizedContainerService.HintSize="509,22" />
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="LogLine_22" sap:VirtualizedContainerService.HintSize="509,111" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ExecuteDataReader_15" sap:VirtualizedContainerService.HintSize="509,312">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_23" sap:VirtualizedContainerService.HintSize="509,111" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SaveEntity`1_1" sap:VirtualizedContainerService.HintSize="509,22" />
      <sap2010:ViewStateData Id="LogLine_24" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="LogLine_25" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="509,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="214,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_26" sap:VirtualizedContainerService.HintSize="525,111" />
      <sap2010:ViewStateData Id="LogLine_27" sap:VirtualizedContainerService.HintSize="525,111" />
      <sap2010:ViewStateData Id="GetEntity`1_5" sap:VirtualizedContainerService.HintSize="525,22" />
      <sap2010:ViewStateData Id="LogLine_28" sap:VirtualizedContainerService.HintSize="525,111" />
      <sap2010:ViewStateData Id="LogLine_29" sap:VirtualizedContainerService.HintSize="503,111" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="503,60" />
      <sap2010:ViewStateData Id="LogLine_30" sap:VirtualizedContainerService.HintSize="503,111" />
      <sap2010:ViewStateData Id="ExecuteQuery_1" sap:VirtualizedContainerService.HintSize="503,114" />
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_31" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_32" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="264,548">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="264,275">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_33" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="503,423">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="503,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SaveEntity`1_2" sap:VirtualizedContainerService.HintSize="503,22" />
      <sap2010:ViewStateData Id="LogLine_34" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="LogLine_35" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="464,259">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="525,1504">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="214,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_93" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_7" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="LogLine_94" sap:VirtualizedContainerService.HintSize="625,111" />
      <sap2010:ViewStateData Id="ExecuteNonQuery_2" sap:VirtualizedContainerService.HintSize="625,114" />
      <sap2010:ViewStateData Id="LogLine_15" sap:VirtualizedContainerService.HintSize="625,111" />
      <sap2010:ViewStateData Id="ConvertApplicantToEnrollment_5" sap:VirtualizedContainerService.HintSize="625,699">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteNonQuery_6" sap:VirtualizedContainerService.HintSize="214,114" />
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="625,262" />
      <sap2010:ViewStateData Id="LogLine_36" sap:VirtualizedContainerService.HintSize="625,111" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ExecuteDataReader_13" sap:VirtualizedContainerService.HintSize="625,312" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ExecuteDataReader_12" sap:VirtualizedContainerService.HintSize="625,312">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="314,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_96" sap:VirtualizedContainerService.HintSize="314,111" />
      <sap2010:ViewStateData Id="SendMail_2" sap:VirtualizedContainerService.HintSize="314,192" />
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,815">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_97" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="ExecuteNonQuery_3" sap:VirtualizedContainerService.HintSize="242,114" />
      <sap2010:ViewStateData Id="ExecuteNonQuery_1" sap:VirtualizedContainerService.HintSize="242,114" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="264,643">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="625,963" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="647,3439">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_14" sap:VirtualizedContainerService.HintSize="314,111" />
      <sap2010:ViewStateData Id="SendMail_1" sap:VirtualizedContainerService.HintSize="314,192" />
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="336,564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="651,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="665,3666">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_95" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_16" sap:VirtualizedContainerService.HintSize="630,111" />
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogLine_17" sap:VirtualizedContainerService.HintSize="242,111" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="264,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteDataReader_14" sap:VirtualizedContainerService.HintSize="630,537" />
      <sap2010:ViewStateData Id="LogLine_18" sap:VirtualizedContainerService.HintSize="630,111" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_19" sap:VirtualizedContainerService.HintSize="758,111" />
      <sap2010:ViewStateData Id="LogLine_45" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="ExecuteNonQuery_4" sap:VirtualizedContainerService.HintSize="214,114">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="236,389">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_46" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="ExecuteNonQuery_5" sap:VirtualizedContainerService.HintSize="214,114">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="236,389">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="497,537" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="519,661">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_47" sap:VirtualizedContainerService.HintSize="214,111" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="758,809" />
      <sap2010:ViewStateData Id="LogLine_20" sap:VirtualizedContainerService.HintSize="758,111" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_2" sap:VirtualizedContainerService.HintSize="214,75">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">880,1149</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">903,1072.5</av:Point>
            <av:Size x:Key="ShapeSize">214,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">1010,1147.5 980,1147.5 980,1149</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">600,1084.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">800,1110 903,1110</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_23">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">350,1084.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">550,1110 600,1110</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,1084.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">320,1110 350,1110</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_19">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,964.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220,1015.5 220,1084.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,854.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220,905.5 220,964.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_18">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,754.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220,805.5 220,854.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_32">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,654.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220,705.5 220,754.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_29">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,554.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220,605.5 220,654.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_33">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,499</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220,521 220,554.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_66" sap:VirtualizedContainerService.HintSize="1219,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_81" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ExecuteDataReader_25" sap:VirtualizedContainerService.HintSize="1219,312">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogLine_67" sap:VirtualizedContainerService.HintSize="1219,111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_30">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">490,754.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">490,780 320,780</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="105,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">365,406.5</av:Point>
            <av:Size x:Key="ShapeSize">105,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">470,450 590,450 590,754.5</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">365,450 220,450 220,499</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">110,359</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,370 417.5,370 417.5,406.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">110,319</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">210,341 210,359</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="160,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">420,216.5</av:Point>
            <av:Size x:Key="ShapeSize">160,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">580,260 1010,260 1010,1072.5</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">420,260 210,260 210,319</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_31">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">400,134.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">500,185.5 500,216.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1141,1207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">470,42.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">500,117.5 500,134.5</av:PointCollection>
            <x:Double x:Key="Width">1127</x:Double>
            <x:Double x:Key="Height">1171</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AutoEnrollment_1" sap:VirtualizedContainerService.HintSize="1181,1287" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>